[
  {
    "type_of": "article",
    "id": 552138,
    "title": "Webpacker 6: Image Asset Guide",
    "description": "Originally posted on my website   In order to use your images and SVG files with Webpacker 6, you ne...",
    "published": true,
    "published_at": "2020-12-24T22:55:39.209Z",
    "slug": "webpacker-6-image-asset-guide-42hn",
    "path": "/andrewmcodes/webpacker-6-image-asset-guide-42hn",
    "url": "https://dev.to/andrewmcodes/webpacker-6-image-asset-guide-42hn",
    "comments_count": 0,
    "public_reactions_count": 9,
    "page_views_count": 244,
    "published_timestamp": "2020-12-24T22:55:39Z",
    "body_markdown": "\u003eOriginally posted on [my website](https://andrewm.codes/posts/webpacker-6/image-assets-guide/)\n\n\nIn order to use your images and SVG files with Webpacker 6, you need to put them in the correct place and import them into your context.\n\n## Install\n\nWe should be good here.\n\n## Usage\n\n### Add Assets\n\n```sh\nmkdir -p app/javascript/media/images\n```\n\n### Require Context\n\n```diff\n// app/javascript/packs/application.js\n+\n+ function importAll(r) {\n+  r.keys().forEach(r);\n+ }\n+ // Add relevant file extensions as needed below.\n+ // I'm sure there is a better way :shrug:\n+ importAll(require.context('../media/images/', true, /\\.(svg|jpg)$/));\n```\n\n## Verify\n\n\u003e Note: Restart the dev server for good luck!\n\nAdd an SVG and PNG into `app/javascript/media/images`\n\nIn one of your views, add two image tags:\n\n```erb\n\u003cimg src=\"\u003c%= asset_pack_path 'media/images/icon.svg' %\u003e\" /\u003e\n\u003cimg src=\"\u003c%= asset_pack_path 'media/images/surf.jpg' %\u003e\" /\u003e\n```\n\nReload your browser and you should see your images.\n\nNote that `\u003c%= asset_pack_path 'media/images/icon.svg' %\u003e` only returns a string, so if you would rather inline your SVG files you will need to refer to the [Webpack Asset Modules documentation][1] and merge your changes into your Webpack context, as explained in [these Webpacker docs][2].\n\n[1]:\thttps://webpack.js.org/guides/asset-modules/#inlining-assets\n[2]:\thttps://github.com/rails/webpacker#webpack-configuration\n",
    "positive_reactions_count": 9,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--xf-Z4Pko--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/ku5g3oagtvbwk3ytl9zp.png",
    "tag_list": ["rails", "webpacker", "tutorial", "svg"],
    "canonical_url": "https://andrewm.codes/posts/webpacker-6/image-assets-guide/",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 551248,
    "title": "Webpacker 6: Troubleshooting Guide",
    "description": "Originally posted on my website   A (growing) collection of tools and techniques for debugging your...",
    "published": true,
    "published_at": "2020-12-24T16:12:01.871Z",
    "slug": "webpacker-6-troubleshooting-guide-pdl",
    "path": "/andrewmcodes/webpacker-6-troubleshooting-guide-pdl",
    "url": "https://dev.to/andrewmcodes/webpacker-6-troubleshooting-guide-pdl",
    "comments_count": 0,
    "public_reactions_count": 8,
    "page_views_count": 189,
    "published_timestamp": "2020-12-24T16:12:01Z",
    "body_markdown": "\u003eOriginally posted on [my website](https://andrewm.codes/posts/webpacker-6/troubleshooting-guide/)\n\nA (growing) collection of tools and techniques for debugging your Webpack(er) setup. \n\nI highly recommend reading the [SurviveJS - Webpack 5 ebook for a real deep dive!][2].\n\n## Locating the Issue\n\nUse the network tab in your browser to view the CSS that’s being sent to the browser for clues.\n\n## Cached Styles\n\nIf you update your styles but your UI does not change and there are no errors, it’s likely browser caching.\n\nHard reload after clearing your cache and you should see your changes.\n\nTo avoid these errors, import your styles into your JS pack vs. using `style-loader`.\n\n## Tools\n\n### Dashboards\n\n- [Webpack-Dashboard][1]\n\n[1]: https://github.com/FormidableLabs/webpack-dashboard \"Webpack-Dashboard\"\n[2]: https://survivejs.com/webpack/foreword/ \"SurviveJS - Webpack 5 ebook for a real deep dive!\"\n",
    "positive_reactions_count": 8,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--yFPzld9v--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/3hfrjwy9pocaia9872jx.png",
    "tag_list": ["rails", "webpacker", "tutorial", "debugging"],
    "canonical_url": "https://andrewm.codes/posts/webpacker-6/troubleshooting-guide/",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 551242,
    "title": "Webpacker 6: Tailwind CSS 2.0 Integration",
    "description": "Originally posted on my website   In order to add Tailwind CSS 2.0 to your Rails 6 + Webpacker 6 app...",
    "published": true,
    "published_at": "2020-12-24T16:11:42.316Z",
    "slug": "webpacker-6-tailwind-css-2-0-integration-3oe6",
    "path": "/andrewmcodes/webpacker-6-tailwind-css-2-0-integration-3oe6",
    "url": "https://dev.to/andrewmcodes/webpacker-6-tailwind-css-2-0-integration-3oe6",
    "comments_count": 0,
    "public_reactions_count": 11,
    "page_views_count": 484,
    "published_timestamp": "2020-12-24T16:11:42Z",
    "body_markdown": "\u003eOriginally posted on [my website](https://andrewm.codes/posts/webpacker-6/tailwindcss-integration/)\n\nIn order to add Tailwind CSS 2.0 to your Rails 6 + Webpacker 6 application, you need PostCSS set up, plus a few additional steps.\n\nTailwind CSS has [detailed documentation on preprocessor usage][1] so refer to that for further setup.\n\n\u003e Note: This section builds on the PostCSS section\n\n## Install\n\n```bash\nyarn add tailwindcss\n```\n\n### Add Tailwind CSS Config File\n\n```bash\nyarn tailwind init\n```\n\n### Update PostCSS Config\n\n```diff\n// postcss.config.js\n\nmodule.exports = {\n  plugins: [\n    require('postcss-import'),\n+   require('tailwindcss'),\n    require('autoprefixer')\n  ]\n}\n```\n\n## Usage\n\n**You should be able to use the same pack tag that you added for CSS.**\n\nMake sure you restart `bin/webpack-dev-server` after installing new loaders.\n\n### Style Loader Example\n\n```diff\n\u003c%# app/views/layouts/application.html.erb %\u003e\n\n+ \u003c%= stylesheet_packs_with_chunks_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %\u003e\n\u003c%= javascript_packs_with_chunks_tag 'application', 'data-turbolinks-track': 'reload' %\u003e\n```\n\n### Extract Example\n\n```diff\n\u003c%# app/views/layouts/application.html.erb %\u003e\n\n\u003c%= javascript_packs_with_chunks_tag 'application', 'data-turbolinks-track': 'reload' %\u003e\n+ \u003c%= stylesheet_pack_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %\u003e\n```\n\n```diff\n// app/javascript/packs/application.js\n\n+ import \"./application.css\"\n```\n\n## Verify\n\n\u003e Note: Make sure you restart the dev server!\n\nLet’s create a new PostCSS file:\n\n```bash\ntouch app/javascript/stylesheets/base.css\necho \"@import 'tailwindcss/base';\" \u003e\u003e app/javascript/stylesheets/base.css\ntouch app/javascript/stylesheets/utilities.css\necho \"@import 'tailwindcss/utilities';\" \u003e\u003e app/javascript/stylesheets/utilities.css\ntouch app/javascript/stylesheets/components.css\necho \"@import 'tailwindcss/components';\" \u003e\u003e app/javascript/stylesheets/components.css\n```\n\nNext, add some CSS:\n\n```diff\n/* app/javascript/stylesheets/base.css */\n\n@import \"tailwindcss/base\";\n\n+ h1 {\n+   font-size: 2.2em;\n+   color: #2563eb;\n+ }\n+\n+ p {\n+   font-size: 1.2em;\n+ }\n```\n\nLastly, update `application.css`:\n\n```css\n/* app/javascript/packs/application.css */\n\n@import \"../stylesheets/base.css\";\n@import \"../stylesheets/components.css\";\n@import \"../stylesheets/utilities.css\";\n```\n\nReload your browser and your styles should be applied now with Tailwind CSS, and the Webpacker loader error should be gone.\n\n[1]:\thttps://tailwindcss.com/docs/using-with-preprocessors\n",
    "positive_reactions_count": 11,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--GC_UYR0y--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/c67xgc475x1p584puwdx.png",
    "tag_list": ["rails", "webpacker", "tailwind", "tutorial"],
    "canonical_url": "https://dev.to/andrewmcodes/webpacker-6-tailwind-css-2-0-integration-3oe6",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 551247,
    "title": "Webpacker 6: SCSS/Sass Loaders",
    "description": "Originally posted on my website   In order to process .scss and .sass files with Webpacker 6, you ne...",
    "published": true,
    "published_at": "2020-12-24T16:11:26.377Z",
    "slug": "webpacker-6-scss-sass-loaders-37p3",
    "path": "/andrewmcodes/webpacker-6-scss-sass-loaders-37p3",
    "url": "https://dev.to/andrewmcodes/webpacker-6-scss-sass-loaders-37p3",
    "comments_count": 0,
    "public_reactions_count": 9,
    "page_views_count": 477,
    "published_timestamp": "2020-12-24T16:11:26Z",
    "body_markdown": "\u003eOriginally posted on [my website](https://andrewm.codes/posts/webpacker-6/sass-loaders/)\n\nIn order to process `.scss` and `.sass` files with Webpacker 6, you need to add [sass-loader and sass][1].\n\n\u003e Note: This section builds on the CSS section\n\n## Install\n\n```bash\nyarn add sass-loader sass\n```\n\n## Usage\n\n**You should be able to use the same pack tag that you added for CSS.**\n\nMake sure you restart `bin/webpack-dev-server` after installing new loaders.\n\n### Style Loader Example\n\n```diff\n\u003c%# app/views/layouts/application.html.erb %\u003e\n\n+ \u003c%= stylesheet_packs_with_chunks_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %\u003e\n\u003c%= javascript_packs_with_chunks_tag 'application', 'data-turbolinks-track': 'reload' %\u003e\n```\n\n### Extract Example\n\n```diff\n\u003c%# app/views/layouts/application.html.erb %\u003e\n\n\u003c%= javascript_packs_with_chunks_tag 'application', 'data-turbolinks-track': 'reload' %\u003e\n+ \u003c%= stylesheet_pack_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %\u003e\n```\n\n```diff\n// app/javascript/packs/application.js\n\n+ import \"./application.scss\"\n```\n\n## Verify\n\n\u003e Note: Make sure you restart the dev server!\n\nLet’s create a new SCSS file:\n\n```bash\ntouch app/javascript/packs/application.scss\n```\n\nNext, add some SCSS:\n\n```css\n/* app/javascript/packs/application.scss */\n\n$body-background: #fafafa;\n$body-color: #444;\n\nbody {\n  background: $body-background;\n  color: $body-color;\n  font-family: sans-serif;\n}\n\nh1,\nnav,\nfooter {\n  text-align: center;\n}\n\nmain {\n  margin: 4rem auto;\n  max-width: 60rem;\n}\n```\n\nReload your browser and your styles should be applied now, and the Webpacker loader error should be gone.\n\n[1]:\thttps://webpack.js.org/loaders/sass-loader/\n",
    "positive_reactions_count": 9,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--5cuXtWod--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/6zlmlehbodp5fr0xlsx4.png",
    "tag_list": ["rails", "webpacker", "tutorial", "sass"],
    "canonical_url": "https://andrewm.codes/posts/webpacker-6/sass-loaders/",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 551245,
    "title": "Webpacker 6: PostCSS Loaders",
    "description": "Originally posted on my website   In order to process .pcss files with Webpacker 6, you need to add...",
    "published": true,
    "published_at": "2020-12-24T16:11:06.329Z",
    "slug": "webpacker-6-postcss-loaders-4ajd",
    "path": "/andrewmcodes/webpacker-6-postcss-loaders-4ajd",
    "url": "https://dev.to/andrewmcodes/webpacker-6-postcss-loaders-4ajd",
    "comments_count": 0,
    "public_reactions_count": 6,
    "page_views_count": 378,
    "published_timestamp": "2020-12-24T16:11:06Z",
    "body_markdown": "\u003eOriginally posted on [my website](https://andrewm.codes/posts/webpacker-6/postcss-loaders/)\n\nIn order to process `.pcss` files with Webpacker 6, you need to add [postcss-loader][1]. I am also going to add PostCSS 8 support.\n\n\u003e Note: This section builds on the CSS section\n\n## Install\n\n```bash\nyarn add postcss-loader postcss@latest autoprefixer@latest postcss-import@latest\n```\n\n### Add PostCSS Config File\n\n```bash\ntouch postcss.config.js\n```\n\n```bash\n// postcss.config.js\n\nmodule.exports = {\n  plugins: [\n    require('postcss-import'),\n    require('autoprefixer')\n  ]\n}\n```\n\n## Usage\n\n**You should be able to use the same pack tag that you added for CSS.**\n\nMake sure you restart `bin/webpack-dev-server` after installing new loaders.\n\n### Style Loader Example\n\n```diff\n\u003c%# app/views/layouts/application.html.erb %\u003e\n\n+ \u003c%= stylesheet_packs_with_chunks_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %\u003e\n\u003c%= javascript_packs_with_chunks_tag 'application', 'data-turbolinks-track': 'reload' %\u003e\n```\n\n### Extract Example\n\n```diff\n\u003c%# app/views/layouts/application.html.erb %\u003e\n\n\u003c%= javascript_packs_with_chunks_tag 'application', 'data-turbolinks-track': 'reload' %\u003e\n+ \u003c%= stylesheet_pack_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %\u003e\n```\n\n```diff\n// app/javascript/packs/application.js\n\n+ import \"./application.css\"\n```\n\n## Verify\n\n\u003e Note: Make sure you restart the dev server!\n\nLet’s create a new PostCSS file:\n\n```bash\nmkdir app/javascript/stylesheets\ntouch app/javascript/stylesheets/base.pcss\n```\n\nNext, add some CSS:\n\n```css\n/* app/javascript/stylesheets/base.pcss */\n\nh1 {\n  font-size: 2.2em;\n  color: #2563eb;\n}\n\np {\n  font-size: 1.2em;\n}\n```\n\nLastly, update `application.css`:\n\n```css\n/* app/javascript/packs/application.css */\n\n@import \"../stylesheets/base.pcss\";\n```\n\nReload your browser and your styles should be applied now, and the Webpacker loader error should be gone.\n\n[1]:\thttps://webpack.js.org/loaders/postcss-loader/ \"postcss-loader\"\n",
    "positive_reactions_count": 6,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--35VdZYT4--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/ylscwdl130owl1l2qotp.png",
    "tag_list": ["rails", "webpacker", "tutorial", "postcss"],
    "canonical_url": "https://andrewm.codes/posts/webpacker-6/postcss-loaders/",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 551244,
    "title": "Webpacker 6: CSS Loaders",
    "description": "Originally posted on my website  This page has changed since first posted, refer to the changelog at...",
    "published": true,
    "published_at": "2020-12-24T16:10:53.964Z",
    "slug": "webpacker-6-css-loaders-28hb",
    "path": "/andrewmcodes/webpacker-6-css-loaders-28hb",
    "url": "https://dev.to/andrewmcodes/webpacker-6-css-loaders-28hb",
    "comments_count": 0,
    "public_reactions_count": 6,
    "page_views_count": 394,
    "published_timestamp": "2020-12-24T16:10:53Z",
    "body_markdown": "\u003eOriginally posted on [my website](https://andrewm.codes/posts/webpacker-6/css-loaders/)\n\n\u003e**This page has changed since first posted**, refer to the changelog at the bottom.\n\nIn order to process `.css` files with Webpacker 6, you need to add [css-loader][1], [style-loader][2], and [mini-css-extract-plugin][3].\n\n## Install\n\n```bash\nyarn add css-loader style-loader mini-css-extract-plugin\n```\n\n## Usage\n\nAdd a `stylesheet_packs_with_chunks_tag` or `stylesheet_pack_tag` to the document head.\n\nMake sure you restart `bin/webpack-dev-server` after installing new loaders.\n\n### Style Loader Example\n\n```diff\n\u003c%# app/views/layouts/application.html.erb %\u003e\n\n+ \u003c%= stylesheet_packs_with_chunks_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %\u003e\n\u003c%= javascript_packs_with_chunks_tag 'application', 'data-turbolinks-track': 'reload' %\u003e\n```\n\n### Extract Example\n\n```diff\n\u003c%# app/views/layouts/application.html.erb %\u003e\n\n\u003c%= javascript_packs_with_chunks_tag 'application', 'data-turbolinks-track': 'reload' %\u003e\n+ \u003c%= stylesheet_pack_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %\u003e\n```\n\n```diff\n// app/javascript/packs/application.js\n\n+ import \"./application.css\"\n```\n\n## Verify\n\n\u003e Note: Make sure you restart the dev server!\n\nLet’s create a new file for our CSS:\n\n```diff\ntouch app/javascript/packs/application.css\n```\n\nNext, add some CSS:\n\n```css\n/* app/javascript/packs/application.css */\n\nh1 {\n  font-size: 2.2em;\n  color: #2563eb;\n}\n\np {\n  font-size: 1.2em;\n}\n```\n\nReload your browser and your styles should be applied now, and the Webpacker loader error should be gone.\n\n## Changelog\n\n- [chore: add css-minimizer-webpack-plugin](https://github.com/andrewmcodes/andrewm-codes-website/pull/12/commits/6b50b3e1a08236a09cd836c97066ddd4e3b76eed)\n\n[1]:\t(https://webpack.js.org/loaders/css-loader/\n[2]:\thttps://webpack.js.org/loaders/style-loader/ \"style-loader\"\n[3]:\thttps://github.com/webpack-contrib/mini-css-extract-plugin \"mini-css-extract-plugin\"\n[4]:\thttps://webpack.js.org/plugins/css-minimizer-webpack-plugin \"css-minimizer-webpack-plugin\"\n",
    "positive_reactions_count": 6,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--7n_RIuJb--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/rbe3xkett9oulszzkoht.png",
    "tag_list": ["rails", "webpacker", "tutorial", "css"],
    "canonical_url": "https://andrewm.codes/posts/webpacker-6/css-loaders/",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 551241,
    "title": "Webpacker 6: Upgrade Guide",
    "description": "Originally posted on my website.   This page has changed since first posted, refer to the changelog...",
    "published": true,
    "published_at": "2020-12-24T16:10:35.208Z",
    "slug": "webpacker-6-upgrade-guide-3p6d",
    "path": "/andrewmcodes/webpacker-6-upgrade-guide-3p6d",
    "url": "https://dev.to/andrewmcodes/webpacker-6-upgrade-guide-3p6d",
    "comments_count": 0,
    "public_reactions_count": 10,
    "page_views_count": 809,
    "published_timestamp": "2020-12-24T16:10:35Z",
    "body_markdown": "\u003eOriginally posted on [my website](https://andrewm.codes/posts/webpacker-6/upgrade-guide/). \n\n\u003e**This page has changed since first posted**, refer to the changelog at the bottom.\n\nIn this article, we will walkthrough how to upgrade to the latest version of [Webpacker][1], which is, at the time of writing,  `6.0.0.beta.2`.\n\nOur upgrade process will begin with updating the Webpacker libraries, then we will update our configs and templates, and end up verifying that our new setup is working.\n\nLet’s get started!\n\n## Updating our `Gemfile`\n\nUpdate the gem in your `Gemfile`:\n\n```diff\n# Gemfile\n\n- gem 'webpacker', '~\u003e 5.0'\n+ gem 'webpacker', '~\u003e 6.0.0.beta.2'\n```\n\nNext, run `bundle install` to install the new gem version. If all goes well, you should see `Using webpacker 6.0.0.beta.2 (was 5.2.1)` in the install output.\n\n## Installing in our Application\n\nRun the installation command, `bin/rails webpacker:install`, to generate the required configuration files, as well as update our `package.json`\n\n## Update Document Head\n\nLastly, let's update `app/views/layouts/application.html.erb`. The docs for Webpacker v6 recommend using the `javascript_packs_with_chunks_tag` tag.\n\n```diff\n\u003c%# app/views/layouts/application.html.erb %\u003e\n\n- \u003c%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %\u003e\n- \u003c%= javascript_pack_tag 'application', 'data-turbolinks-track': 'reload' %\u003e\n+ \u003c%= javascript_packs_with_chunks_tag 'application', 'data-turbolinks-track': 'reload' %\u003e\n```\n\n## Verify Installation\n\nRun the Rails server (`bin/rails s`) and the Webpack Dev Server (`bin/webpack-dev-server`) via your preferred method. Two terminal tabs will work or create a [Procfile][2] and run via [overmind][3] or [foreman][4]. The Rails server will also compile your assets if the dev server is not running, but this is much slower vs running separate processes and not recommended.\n\nVisit `http://localhost:3000` in your browser. If all's well, you should see the contents of `app/views/pages/home.html.erb`.\n\nWe can verify our JavaScript is getting loaded by adding the following to `app/javascript/packs/application.js`:\n\n```js\n// app/javascript/packs/application.js\n\nconsole.log('Hello from Webpacker!')\n```\n\nOpen the browser console and reload the page and you should see the message we added:\n\n```js\n[Log] Hello from Webpacker! (application-7fbebc85af7886af0a64.js, line 62)\n```\n\n## Summary\n\nCongrats! You’re up and running with Webpacker 6!\n\nUnfortunately you will quickly realize that your upgrade is not finished if you begin developing like you usually would with Webpacker.\n\nWebpacker 6 requires you to add the [appropriate Webpack loaders][5] yourself, which is a breaking change from previous versions.\n\nWe will tackle that [in the next article!](https://andrewm.codes/posts/webpacker-6/css-loaders/)\n\n## Changelog\n\n- [feat: updates for webpacker v6.0.0.beta.2](https://github.com/andrewmcodes/andrewm-codes-website/pull/11)\n\n[1]:\thttps://github.com/rails/webpacker/releases \"Webpacker\"\n[2]:\thttps://devcenter.heroku.com/articles/procfile\n[3]:\thttps://github.com/DarthSim/overmind\n[4]:\thttps://github.com/ddollar/foreman\n[5]:\thttps://webpack.js.org/loaders/\n",
    "positive_reactions_count": 10,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--rPKqZimi--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/2fo3pnafc0we575zxlyr.png",
    "tag_list": ["rails", "ruby", "webpacker", "tutorial"],
    "canonical_url": "https://andrewm.codes/posts/webpacker-6/upgrade-guide/",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 551238,
    "title": "Webpacker 6: Tutorial Setup",
    "description": "Originally posted on my website   Before we start the upgrade process for Webpacker 6, we are going...",
    "published": true,
    "published_at": "2020-12-24T16:10:21.879Z",
    "slug": "webpacker-6-tutorial-setup-281k",
    "path": "/andrewmcodes/webpacker-6-tutorial-setup-281k",
    "url": "https://dev.to/andrewmcodes/webpacker-6-tutorial-setup-281k",
    "comments_count": 0,
    "public_reactions_count": 19,
    "page_views_count": 641,
    "published_timestamp": "2020-12-24T16:10:21Z",
    "body_markdown": "\u003eOriginally posted on [my website](https://andrewm.codes/posts/webpacker-6/tutorial-setup-guide/)\n\nBefore we start the upgrade process for Webpacker 6, we are going to create a small demo application for us to work on. \n\nIf you are upgrading an existing app or not using this series as a tutorial, you can skip this step! We will begin the formal upgrade process in the next article.\n\n## Generate a new Rails app\n\nFirst we will generate new Ruby on Rails app:\n\n```sh\nrails new webpacker_6 --skip-sprockets --skip-spring --skip-webpack-install --skip-bundle\ncd webpacker_6\n```\n\n\n- `--skip-sprockets`: Skip Sprockets files\n- `--skip-spring`: Don't install Spring application preloader\n- `--skip-bundle`: Don't run bundle install\n- `--skip-webpack-install`: Don't run Webpack install\n\n### Setup the Database\n\n```sh\nbin/rails db:prepare\n```\n\n### Turn off asset scaffolding\n\nPrevent Rails from creating asset files when running the generators and scaffolds:\n\n```diff\n# config/application.rb\n\n# ...\nmodule Webpacker6\n  class Application \u003c Rails::Application\n    config.load_defaults 6.1\n+    config.generators do |g|\n+      g.assets false\n+    end\n  end\nend\n```\n\n## Add Pages Controller\n\nGenerate pages controller with a home action:\n\n```sh\nbin/rails g controller pages home\n```\n\n## Add Root Route\n\nSet `pages#home` as the root route:\n\n```diff\n# config/routes.rb\n\nRails.application.routes.draw do\n  get 'pages/home'\n+  root to: 'pages#home'\n  # For details on the DSL available within this file, see https://guides.rubyonrails.org/routing.html\nend\n```\n\n\u003e Note: Because we skipped the Webpacker install task, you will get an error if you try to start the application as is. We will fix that in the next article.",
    "positive_reactions_count": 19,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--9KOpvZCa--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/10lu5ml7jlx9atv0q757.png",
    "tag_list": ["rails", "ruby", "tutorial", "webpacker"],
    "canonical_url": "https://andrewm.codes/posts/webpacker-6/tutorial-setup-guide/",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 539423,
    "title": "gem install mysql2",
    "description": "I've come across this error several times throughout my development career so I figured it was finall...",
    "published": true,
    "published_at": "2020-12-11T12:20:02.061Z",
    "slug": "gem-install-mysql2-6o1",
    "path": "/andrewmcodes/gem-install-mysql2-6o1",
    "url": "https://dev.to/andrewmcodes/gem-install-mysql2-6o1",
    "comments_count": 0,
    "public_reactions_count": 12,
    "page_views_count": 112,
    "published_timestamp": "2020-12-11T12:20:02Z",
    "body_markdown": "I've come across this error several times throughout my development career so I figured it was finally time to write it down.\n\n## Scenario\n\nWhenever I try to install certain versions of the `mysql2` gem in a Ruby on Rails application, I get the following error:\n\n```\nGem::Ext::BuildError: ERROR: Failed to build gem native extension\n...\nmake \"DESTDIR=\"\ncompiling client.c\ncompiling infile.c\ncompiling mysql2_ext.c\ncompiling result.c\ncompiling statement.c\nlinking shared-object mysql2/mysql2.bundle\nld: library not found for -lssl\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\nmake: *** [mysql2.bundle] Error 1\n\nmake failed, exit code 2\n\nAn error occurred while installing mysql2 (0.5.2), and Bundler cannot continue.\nMake sure that `gem install mysql2 -v '0.5.2'` succeeds before bundling.\n```\n\n## Solution\n\nIn order to fix this issue on macOS, first make sure that you have `cmake` installed.\n\n```sh\nbrew install cmake\n```\n\nThen you can install the gem via the following command:\n\n```sh\ngem install mysql2 -v '0.5.2' -- --with-ldflags=-L/usr/local/opt/openssl/lib --with-cppflags=-I/usr/local/opt/openssl/include\n```\n\nHope this helps save someone some time!",
    "positive_reactions_count": 12,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--Wigsbt1X--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/gflaa24bmzre9ilsc76u.png",
    "tag_list": ["ruby", "rails", "mysql", "gem"],
    "canonical_url": "https://dev.to/andrewmcodes/gem-install-mysql2-6o1",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 521931,
    "title": "Ruby's Shovel Method: Digging Deeper",
    "description": "Heads up! This is not actually a deep dive 😬   With everything going on in the world, I almost forgo...",
    "published": true,
    "published_at": "2020-11-22T05:53:26.610Z",
    "slug": "ruby-s-shovel-method-digging-deeper-5hfm",
    "path": "/andrewmcodes/ruby-s-shovel-method-digging-deeper-5hfm",
    "url": "https://dev.to/andrewmcodes/ruby-s-shovel-method-digging-deeper-5hfm",
    "comments_count": 1,
    "public_reactions_count": 14,
    "page_views_count": 136,
    "published_timestamp": "2020-11-22T05:53:26Z",
    "body_markdown": "\u003eHeads up! This is not _actually_ a deep dive 😬\n\nWith everything going on in the world, I almost forgot how fun it can be to code in Ruby! I am not being sarcastic, its _actually_ really fun!\n\n## What kind of fun?\n\n Earlier, I was reviewing some code in a PR to [Bridgetown](https://github.com/bridgetownrb/bridgetown), and I came across this change:\n\n```diff\n- static_template_files \u003c\u003c \"/Gemfile\"\n+ static_template_files.push \"/Gemfile\", \"/package.json\"\n```\n\nWhenever I see small method changes during code review, I find it a helpful mind exercise to consider whether the method actually *needed* to be changed since there's almost always _a way_ in Ruby. More often than not, this leads me to my favorite type of Ruby: quirky, fun, and a bit magical.\n\nYou could even call it *blursed*...🤔\n\nAnd if we are really being honest, blursed Ruby is my favorite type of Ruby.\n\n## `Array#\u003c\u003c`\n\nCommonly referred to as the \"shovel operator\", `\u003c\u003c` is a method in Ruby that is commonly used to push an object onto an array, but you can shovel into strings as well.\n\nFor example:\n\n```ruby\n[\"foo\", \"bar\"] \u003c\u003c \"baz\"\n#=\u003e [\"foo\", \"bar\", \"baz\"]\n```\n\n\u003e Speaking of blursed Ruby, [check out the example code in the docs for `str \u003c\u003c int`](https://ruby-doc.org/core-2.6/String.html#method-i-3C-3C). \n\n## TIL!\n\nToday I `/re(learned|membered)/` you can chain shovels! Not that you _should_....but just in case, know that you _can_.\n\nThe following is a blursed example of just that:\n\n![Blursed Ruby Shovel Code Screenshot](https://dev-to-uploads.s3.amazonaws.com/i/yufpo9f1pbnp7y3flt9u.png)\n\n[View gist](https://gist.github.com/andrewmcodes/2e4ba1d60016e065155f0509d3814234)\n\nI realized I was grinning from ear to ear while writing this code. This code will run just fine if you paste it into IRB or Pry, emojis and all! A fun example of what you _can_ do with Ruby, if you wanted to.\n\n## Back to code review\n\nJust because you _can_ do it doesn't mean you should! The readability of swapping the shovel operator with the `Array#push` method is the right call in my opinion. The change got a green check of approval from me.\n\nBut, I couldn't resist sharing my blursed example. Hopefully it makes you grin as well.\n\nAs I said at the beginning: it's fun to write Ruby!\n\nHappy coding!",
    "positive_reactions_count": 14,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--5T2yr_RU--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/bcmmm6rcamq6axlhtswm.png",
    "tag_list": ["ruby", "devjournal", "tutorial", "rails"],
    "canonical_url": "https://dev.to/andrewmcodes/ruby-s-shovel-method-digging-deeper-5hfm",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 511689,
    "title": "How I Use VSCode",
    "description": "I’m about to overhaul my settings and plugins in VSCode so this is my “before” shot.   I recently upd...",
    "published": true,
    "published_at": "2020-11-11T01:30:15.823Z",
    "slug": "how-i-use-vscode-1aha",
    "path": "/andrewmcodes/how-i-use-vscode-1aha",
    "url": "https://dev.to/andrewmcodes/how-i-use-vscode-1aha",
    "comments_count": 2,
    "public_reactions_count": 23,
    "page_views_count": 487,
    "published_timestamp": "2020-11-11T01:30:15Z",
    "body_markdown": "I’m about to overhaul my settings and plugins in VSCode so this is my “before” shot. \n\nI recently updated and shared my [Visual Studio Code settings](https://howivscode.com/andrewmcodes) on [How I VSCode](https://howivscode.com).\n\nCheck them out and share yours as well!\n\nReally loving this tool because now I can always point people towards tools I like without having to copy it from a gist somewhere or be on my computer. \n\nWhat plugins are you really enjoying? Any new ones? Which ones do you no longer need as the software matures?\n\nHappy (VS) Coding!\n",
    "positive_reactions_count": 23,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iL-xKG5n--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/1btlqp6ir2ga02k3m00t.png",
    "tag_list": ["vscode", "ruby", "rails", "discuss"],
    "canonical_url": "https://dev.to/andrewmcodes/how-i-use-vscode-1aha",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    },
    "flare_tag": { "name": "discuss", "bg_color_hex": "#000000", "text_color_hex": "#FFFFFF" }
  },
  {
    "type_of": "article",
    "id": 467400,
    "title": "15 Resources I Learned Something From This Weekend",
    "description": "I wanted to get a lot of writing done this weekend but unfortunately I had to take care of a cranky a...",
    "published": true,
    "published_at": "2020-09-28T00:20:58.912Z",
    "slug": "15-ruby-on-rails-resources-443o",
    "path": "/andrewmcodes/15-ruby-on-rails-resources-443o",
    "url": "https://dev.to/andrewmcodes/15-ruby-on-rails-resources-443o",
    "comments_count": 4,
    "public_reactions_count": 40,
    "page_views_count": 1087,
    "published_timestamp": "2020-09-28T00:20:58Z",
    "body_markdown": "I wanted to get a lot of writing done this weekend but unfortunately I had to take care of a cranky app instead. \n\nIt's been awhile since I have posted though, and since I know how my brain works, there was some inner worry that I'd keep slipping out of my (once regular) habit of writing.\n\nFor my own mental health, I promised myself I would post something, but I needed to do it quickly. After digging through my browser history for something, it dawned on me that there was a lot of great content in there that some of y'all may find interesting as well!\n\nWithout further adieu, here are 5 blog posts, 5 projects, and 5 podcasts that I read/listened to this weekend:\n\n## Blog Posts\n\n- [Rails Performance: When is Caching the Right Choice? - Honeybadger Developer Blog](https://www.honeybadger.io/blog/rails-caching-alternatives/)\n- [Churn vs. Complexity vs. Code Coverage - FastRuby.io | Rails Upgrade Service](https://www.fastruby.io/blog/code-quality/churn-vs-complexity-vs-coverage.html)\n- [A 1588x Render Speed Increase With Solr Caching on Rails to Solve All Your Performance Issues - NRoweGT: Atlanta Ruby on Rails Consultancy](http://blog.nrowegt.com/use-and-abuse-solr-caching-on-rails-to-solve-all-performance-your-issues/)\n- [Code Audit: How to Ensure the Quality of Your Ruby on Rails Application](https://rubygarage.org/blog/how-to-do-code-audit-for-ruby-on-rails-apps)\n- [Will Johnson | How Does The Model Interact With The Database In Ruby on RailsHow Does The Model Interact With The Database In Ruby on Rails | Will Johnson](https://williamjohnson.dev/how-does-the-model-interact-with-the-database/)\n\n## Projects\n\n- {% github gregnavis/active_record_doctor no-readme %}\n- {% github ViliusLuneckas/rails-cache-inspector no-readme %}\n- {% github soutaro/steep no-readme %}\n- {% github ParamagicDev/snowpacker no-readme %}\n- {% github foambubble/foam no-readme %}\n\n## Podcasts \n\n- [Should You Interview Job Candidates Via Slack Or TikTok? | FounderQuest](https://www.founderquestpodcast.com/episodes/should-you-interview-job-candidates-via-slack-or-tiktok)\n- [#166 Country of Liars | Reply All](https://gimletmedia.com/shows/reply-all/llhe5nm/166-country-of-liars)\n- [5by5 | Ruby on Rails Podcast #337: Chipping Away at a Monolith with Tori Huang](https://5by5.tv/rubyonrails/337)\n- [How open source saved htop (The Changelog #413)](https://changelog.com/podcast/413)\n- [The Art of Product: 144: Launching SavvyCalpauseplayskip-backwardskip-forward](https://artofproductpodcast.com/episode-144)\n\n## Summary\n\nAfter that list, any guesses as to what I've been up to recently?\n\nIf you found something on this list interesting, let me know! I'd love to chat about your thoughts about any of the above resources so reply in the comments or [tweet at me!](https://twitter.com/andrewmcodes).\n\nHopefully I can finish a bigger post I'm working on by next weekend, but for now, happy coding!!",
    "positive_reactions_count": 40,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--hs4PHXjn--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/s0gzgiegod7iy328vyhs.jpg",
    "tag_list": ["ruby", "podcast", "rails", "resources"],
    "canonical_url": "https://dev.to/andrewmcodes/15-ruby-on-rails-resources-443o",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 427133,
    "title": "8 Tailwind CSS resources to help your next project takeoff",
    "description": "Let's face it, no matter whether its our first or hundredth time, staring at a blank Tailwind CSS is...",
    "published": true,
    "published_at": "2020-08-14T02:03:30.059Z",
    "slug": "8-tailwind-css-resources-to-help-your-next-project-takeoff-2b92",
    "path": "/andrewmcodes/8-tailwind-css-resources-to-help-your-next-project-takeoff-2b92",
    "url": "https://dev.to/andrewmcodes/8-tailwind-css-resources-to-help-your-next-project-takeoff-2b92",
    "comments_count": 5,
    "public_reactions_count": 146,
    "page_views_count": 2642,
    "published_timestamp": "2020-08-14T02:03:30Z",
    "body_markdown": "Let's face it, no matter whether its our first or hundredth time, staring at a blank Tailwind CSS is intimidating. The enormity of the task at hand starts to crash over you as the excitement begins to build. Here are eight resources that I reach for first when I need to move quickly or want inspiration that may prove helpful to you.\n\nAt the end of list I will let you know which of the following I add to every Tailwind CSS project, NO MATTER WHAT!\n\n## Theme Components\n\n{% github praveenjuge/kutty %}\n{% github estevanmaito/windmill-dashboard %}\n\n## Text \u0026 Typography Components\n\n{% github jhta/tailwindcss-truncate-multiline %}\n{% github tailwindlabs/tailwindcss-typography %}\n\n## Layout Components\n\n{% github tailwindlabs/tailwindcss-custom-forms %}\n{% github Log1x/tailwindcss-container-sizes %}\n\n## Bonus: Developer XP\n\n{% github rogden/tailwind-config-viewer %}\n{% github jorenvanhee/tailwindcss-debug-screens %}\n\nOut of all of these great resources, I find [Tailwind Debug Screens](https://github.com/jorenvanhee/tailwindcss-debug-screens) to be the most helpful, most of the time. In addition to the time you will save by using the plugin, it will also help you create better responsive designs and become more familiar with sizing in Tailwind by sight.\n\nHappy coding!",
    "positive_reactions_count": 146,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--hL1E2IiB--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/p6ofp5xrspni70xzmfxe.jpg",
    "tag_list": ["tailwindcss", "css", "webdev", "beginners"],
    "canonical_url": "https://dev.to/andrewmcodes/8-tailwind-css-resources-to-help-your-next-project-takeoff-2b92",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 405599,
    "title": "How to inline SVG files  in your Bridgetown site",
    "description": "This is a short tutorial to showcase how you can quickly integrate bridgetown-inline-svg into your Br...",
    "published": true,
    "published_at": "2020-07-21T20:18:38.141Z",
    "slug": "how-to-inline-svg-files-in-your-bridgetown-site-45ag",
    "path": "/andrewmcodes/how-to-inline-svg-files-in-your-bridgetown-site-45ag",
    "url": "https://dev.to/andrewmcodes/how-to-inline-svg-files-in-your-bridgetown-site-45ag",
    "comments_count": 0,
    "public_reactions_count": 9,
    "page_views_count": 132,
    "published_timestamp": "2020-07-21T20:18:38Z",
    "body_markdown": "This is a short tutorial to showcase how you can quickly integrate [`bridgetown-inline-svg`](https://github.com/andrewmcodes/bridgetown-inline-svg) into your [Bridgetown](https://www.bridgetownrb.com) site to easily inline your SVG assets when you build your site.\n\nThe code for this tutorial can be found at: [andrewmcodes/bridgetown-inline-svg-starter](https://github.com/andrewmcodes/bridgetown-inline-svg-starter)\n\nThis tutorial is using version `1.1.0` of `bridgetown-inline-svg`. If you are already using this plugin, you may need to upgrade the gem.\n\nLet's get started!\n\n## Quickstart\n\nTo follow along without building the project yourself, just open in Gitpod via the button below, and open the browser preview on port 4000 after dependencies are installed and Bridgetown starts up.\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/andrewmcodes/bridgetown-inline-svg-starter)\n\n## Setup\n\nThis tutorial will assume you have Ruby, Node, and the [bridgetown gem](https://rubygems.org/gems/bridgetown) installed locally.\n\nFor detailed instructions on getting Bridgetown set up on your local machine, take a look at the [Bridgetown Getting Started Documentation](https://www.bridgetownrb.com/docs/) and the [Bridgetown Installation Guides](https://www.bridgetownrb.com/docs/installation). I also go into a little more depth in [this post detailing how to setup NetlifyCMS on your Bridgetown site.](https://dev.to/andrewmcodes/creating-a-blog-with-bridgetown-and-netlify-cms-1d1a)\n\n## Creating a new Bridgetown site\n\nThe first thing we are going to do is generate a new Bridgetown site.\n\nRun the following command in your terminal:\n\n```bash\nbridgetown new bridgetown-inline-svg-starter\ncd bridgetown-inline-svg-starter\n```\n\nOur new site has been generated! :tada:\n\n### Add [`bridgetown-inline-svg`](https://github.com/andrewmcodes/bridgetown-inline-svg) plugin\n\nThe next thing we are going to do is add the [`bridgetown-inline-svg`](https://github.com/andrewmcodes/bridgetown-inline-svg) gem.\n\nRun the following command in your terminal to add the plugin to your site's Gemfile:\n\n```bash\nbundle add bridgetown-inline-svg -g bridgetown_plugins\n```\n\nor manually:\n\n```ruby\n# Gemfile\n\ngroup :bridgetown_plugins do\n  gem \"bridgetown-inline-svg\", \"~\u003e 1.1.0\"\nend\n```\n\n### Add SVG files\n\nCreate a folder for your SVG files under `src/`. You can name or nest it however you like. I am just going to create a folder named `assets`:\n\n```bash\nmkdir src/assets\n```\n\nThen get your SVG files! This library works great with anything from illustrations to icons.\n\nFor the purpose of this demo, I downloaded two illustrations from [unDraw](https://undraw.co) by [Katerina Limpitsouni](https://twitter.com/ninaLimpi), which is a great resource of open source illustrations, and one icon from [Heroicons](https://github.com/refactoringui/heroicons), an open source SVG icon library from [Adam Wathan](https://adamwathan.me) and [Steve Schoger](https://www.steveschoger.com).\n\nYou can download my assets [here](https://github.com/andrewmcodes/bridgetown-inline-svg-starter/releases/download/v1.0.0/assets.zip).\n\nMy project `src/assets` folder now looks like:\n\n```diff\n|-- bridgetown\n    |-- src\n+   |   |-- assets\n+   |       |-- mail.svg\n+   |       |-- undraw_content_creator.svg\n+   |       |-- undraw_design_components.svg\n```\n\n## Using the plugin\n\nLet's take a look at what we have right now. Run `yarn start` in your terminal and open `http://localhost:4000` in your browser.\n\nYour should see following in:\n\n![Default Bridgetown Site](https://dev-to-uploads.s3.amazonaws.com/i/m9dg93scfne9srinnpkw.jpg)\n\n### Pages\n\n\u003e \"Pages are the most basic building block for content..\" [Bridgetown Pages Documentation](https://www.bridgetownrb.com/docs/pages)\n\nLet's add a simple full-width SVG to our home page. Add the following to `src/index.md`, but replace my filepath with your own:\n\n```liquid\n{% svg \"assets/undraw_design_components.svg\" width=\"100%\" %}\n```\n\nThis will produce something like:\n\n![Home page with illustration](https://dev-to-uploads.s3.amazonaws.com/i/sd27459kmiiqxx10ar36.jpg)\n\n### Collections\n\n\u003e \"Collections are a great way to group related content...\" [Bridgetown Collections Documentation](https://www.bridgetownrb.com/docs/collections)\n\nLet's add a simple full-width SVG to the blog post Bridgetown generated for us. Add the following to `src/_posts/2020-07-20-welcome-to-bridgetown.md` (the date prefix will be whatever date you generated the project):\n\n```liquid\n{% raw %}{% svg \"assets/undraw_content_creator.svg\" width=\"100%\" height=\"280\" %}{% endraw %}\n```\n\nNavigate to the post by going to `http://localhost:4000/posts/` and choose your post. It will look something like this:\n\n![Post page with illustration](https://dev-to-uploads.s3.amazonaws.com/i/gfd9xw5cq38rxtoohtbj.jpg)\n\n### Components\n\n\u003e \"A component is a reusable piece of template logic (sometimes referred to as a “partial”) that can be included in any part of the site...\" [Bridgetown Components Documentation](https://www.bridgetownrb.com/docs/components)\n\nLet's add an icon to our footer component. Add the following to `src/_components/footer.liquid`:\n\n```diff\n\u003cfooter\u003e\n- Contact me at {{ metadata.email }}\n+ {% svg \"assets/mail.svg\" style=\"color:#6c63ff;\" height=\"1.5rem\" %}\n+ \u003cp\u003e{{ metadata.email }}\u003c/p\u003e\n\u003c/footer\u003e\n```\n\nYour footer should now look something like:\n\n![Footer icon](https://dev-to-uploads.s3.amazonaws.com/i/9e6z1wjnwsot2hzl9m94.jpg)\n\n## Attributes\n\nYou can pass any valid SVG attribute to the plugin. If the attribute you pass in is already set in your SVG markup, the plugin will __override it__.\n\nHere are a few examples based on usage above:\n\n### Width and Height\n\n```liquid\n{% svg \"path/to/my.svg\" width=\"100%\" %}\n```\n\nAdding `width=\"100%\"` as an argument will change our output to:\n\n```html\n\u003csvg width=\"100%\" height=\"100%\"\u003e\u003c/svg\u003e\n```\n\nHeight is automatically set to match width if omitted because IE11 won't use the viewport attribute to calculate the image's aspect ratio.\n\nIf you don't want the width and height to match, set both:\n\n\n```liquid\n{% svg \"path/to/my.svg\" width=\"100%\" height=240 %}\n```\n\nproduces:\n\n```html\n\u003csvg width=\"100%\" height=\"240\"\u003e\u003c/svg\u003e\n```\n\n### Style\n\nSet or override inline styles on your SVG with the `style` attribute:\n\n```liquid\n{% svg \"path/to/my.svg\" style=\"color:#6c63ff;\" %}\n```\n\nproduces:\n\n```html\n\u003csvg style=\"color:#6c63ff;\"\u003e\u003c/svg\u003e\n```\n\n### Classes\n\nSet or override CSS classes on your SVG with the `class` attribute:\n\n```liquid\n{% svg \"path/to/my.svg\" class=\"class-1 class-2\" %}\n```\n\nproduces:\n\n```html\n\u003csvg class=\"class-1 class-2\"\u003e\u003c/svg\u003e\n```\n\n## Wrap up\n\nFrom this point, you can continue adding SVGs to your site and the plugin will inline them when Bridgetown builds.\n\nWe didn't cover it in this post, but [the plugin can also optimize your SVGs as well](https://github.com/andrewmcodes/bridgetown-inline-svg#optional-configuration-options). View the [README](https://github.com/andrewmcodes/bridgetown-inline-svg) for the full documentation.\n\nIf you encounter any issues or find a bug with the plugin, feel free to report it on the [repository](https://github.com/andrewmcodes/bridgetown-inline-svg).\n\n### Want to learn more?\n\nCheck out [my website](https://www.andrewm.codes) or [sign up for my newsletter](https://andrew.rubyists.dev) for more Bridgetown content!\n\nHappy coding!",
    "positive_reactions_count": 9,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--pVeuSCKC--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/5nfy4qo3whqn3g01vbzv.png",
    "tag_list": ["tutorial", "beginners", "bridgetown", "ruby"],
    "canonical_url": "https://dev.to/andrewmcodes/how-to-inline-svg-files-in-your-bridgetown-site-45ag",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 392242,
    "title": "Creating a blog with Bridgetown and Netlify CMS",
    "description": "This is a quick tutorial to showcase how you can quickly integrate Netlify CMS into your Bridgetown s...",
    "published": true,
    "published_at": "2020-07-11T04:29:16.681Z",
    "slug": "creating-a-blog-with-bridgetown-and-netlify-cms-1d1a",
    "path": "/andrewmcodes/creating-a-blog-with-bridgetown-and-netlify-cms-1d1a",
    "url": "https://dev.to/andrewmcodes/creating-a-blog-with-bridgetown-and-netlify-cms-1d1a",
    "comments_count": 1,
    "public_reactions_count": 29,
    "page_views_count": 402,
    "published_timestamp": "2020-07-11T04:29:16Z",
    "body_markdown": "This is a quick tutorial to showcase how you can quickly integrate Netlify CMS into your [Bridgetown](https://www.bridgetownrb.com) site. \n\nThe code for this tutorial can be found at:\n\n{% github andrewmcodes/bridgetown-netlify-cms-starter no-readme %}\n\nLet's get started! \n\n### Setup\n\nFor detailed instructions on getting Bridgetown set up on your local machine, take a look at the [Bridgetown Getting Started Documentation](https://www.bridgetownrb.com/docs/) and the [Bridgetown Installation Guides](https://www.bridgetownrb.com/docs/installation).\n\nThe TL;DR is you need Ruby `\u003e= 2.5`, Bundler, Node `\u003e= 10.13`, Yarn, and the Bridgetown gem installed.\n\nYou can install the gem by running the following command in your terminal:\n\n```bash\ngem install bridgetown\n```\n\nAs far as the other dependencies go, you don't have to use the same versions that I am as long as you meet the minimum requirements above, but this is what I am currently using:\n\n- Ruby 2.7.1\n  - Bundler 2.4.1\n- Node 13.11.0\n    - Yarn 1.22.4\n\n### Creating a new Bridgetown site\n\nThe first thing we are going to do is generate a new Bridgetown site.\n\nRun the following command in your terminal:\n\n```bash\nbridgetown new bridgetown-netlify-cms-starter\ncd bridgetown-netlify-cms-starter\n```\n\nOur new site has been generated! :tada:\n\nLet's take a look! Run `yarn start` in your terminal and open `http://localhost:4000` in your browser.\n\n![Alt Text](https://dev-to-uploads.s3.amazonaws.com/i/m9dg93scfne9srinnpkw.jpg)\n\n#### Optional Styling\n\nJust to make this a little prettier, I am going to add [new.css](https://newcss.net), which just adds styles to your default HTML. If you'd like to do the same, add the following in your head component at `src/_components/head.liquid`:\n\n```html\n\u003c!-- src/_components/head.liquid --\u003e\n\u003clink rel=\"stylesheet\" href=\"https://fonts.xz.style/serve/inter.css\"\u003e\n\u003clink rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@exampledev/new.css@1.1.2/new.min.css\"\u003e\n```\n\nAnd remove the contents of `frontend/styles/index.scss`.\n\n### Adding Netlify CMS to your site\n\n_I won't be going in great depth about the specific features of Netlify CMS, I encourage taking a looking at the [Netlify CMS Documentation](https://www.netlifycms.org/docs/intro/) to learn more._\n\nWe are going to create an `admin` folder with two files: `index.html` and `config.yml`:\n\n```bash\nmkdir src/admin\ntouch src/admin/index.html\ntouch src/admin/config.yml\n```\n\nPaste the following inside of `src/admin/index.html`:\n\n```html\n\u003c!doctype html\u003e\n\u003chtml\u003e\n  \u003chead\u003e\n    \u003cmeta charset=\"utf-8\"\u003e\n    \u003cmeta http-equiv=\"x-ua-compatible\" content=\"ie=edge\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\u003e\n    \u003ctitle\u003eNetlify CMS\u003c/title\u003e\n    \u003cscript src=\"https://identity.netlify.com/v1/netlify-identity-widget.js\" type=\"text/javascript\"\u003e\u003c/script\u003e\n  \u003c/head\u003e\n  \u003cbody\u003e\n    \u003cscript src=\"https://unpkg.com/netlify-cms@^2.0.0/dist/netlify-cms.js\" type=\"text/javascript\"\u003e\u003c/script\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n```\n\nAnd in `src/admin/config.yml`\n\n```yml\nbackend:\n  name: git-gateway # required for using Github\n  branch: main # the default branch you want CMS changes merged to\n  commit_messages: # Optional: configure the commit messages Netlify CMS will use when publishing changes\n    create: \"feat({{collection}}): :sparkles: Create {{slug}}\"\n    update: \"chore({{collection}}): :recycle: Update {{slug}}\"\n    delete: \"chore({{collection}}): :recycle: Delete {{slug}}\"\n    uploadMedia: \"feat(assets): :bento: Upload {{path}}\"\n    deleteMedia: \"chore(assets): :wastebasket: Delete {{path}}\"\n\nlocal_backend: true # Enable the CMS locally\n\nmedia_folder: src/images/uploads # location of where we want images uploaded via the CMS put\n\ncollections:\n  - name: blog # collection name\n    label: Blog # label in the CMS\n    folder: src/_posts/ # location of the files that make up the collection\n    extension: .md # extension of those files\n    format: frontmatter # format to use\n    create: true # allow creation of new items in this collection\n    slug: '{{year}}-{{month}}-{{day}}-{{title}}' # the slug to use when creating new items\n    editor:\n      preview: false # According to the documentation, this won't work with our setup, but I didn't try\n    fields: # Fields for the collection\n      - { label: Layout, name: layout, widget: hidden, default: post }\n      - { label: Title, name: title, widget: string }\n      - { label: Publish Date, name: date, widget: datetime }\n      - { label: Body, name: body, widget: markdown }\n  - name: pages\n    label: Pages\n    editor:\n      preview: false\n    files:\n      - label: Index Page\n        name: index\n        file: src/index.md\n        fields:\n          - { label: Layout, name: title, widget: hidden, default: home }\n          - { label: Body, name: body, widget: markdown }\n      - label: About Page\n        name: about\n        file: src/about.md\n        fields:\n          - { label: Title, name: title, widget: hidden, default: About }\n          - { label: Layout, name: layout, widget: hidden, default: page }\n          - { label: Permalink, name: permalink, widget: string, default: '/about/' }\n          - { label: Body, name: body, widget: markdown }\n```\n\nFor more information on these config options, checkout the [Netlify CMS Configuration Options Documentation](https://www.netlifycms.org/docs/configuration-options/)\n\nI decided what fields needed to be used by looking at the frontmatter in the example pages that Bridgetown created with the new site.\n\nFor our posts, this looks like:\n\n```md\n---\nlayout: post\ntitle:  \"Your First Post on Bridgetown\"\ndate:   2020-07-10 21:04:54 -0400\ncategories: updates\n---\n```\n\nand in our config for Netlify CMS:\n\n```yml\nfields:\n  - { label: Layout, name: layout, widget: hidden, default: post }\n  - { label: Title, name: title, widget: string }\n  - { label: Publish Date, name: date, widget: datetime }\n  - { label: Body, name: body, widget: markdown }\n```\n\nI neglected to add categories, which would be [a great contribution to this repository](https://github.com/andrewmcodes/bridgetown-netlify-cms-starter) if you are interested!\n\nYou should now be able to navigate to `http://localhost:4000/admin` in your browser and see this page:\n\n![Netlify CMS Admin Page](https://dev-to-uploads.s3.amazonaws.com/i/arv5vukbo7y6lr5r8zsi.jpg)\n\nIn order to use the CMS locally, run `npx netlify-cms-proxy-server` in a separate terminal window or run `yarn add -D netlify-cms-proxy-server` and modify `start.js`:\n\n```diff\nconcurrently([\n  { command: \"yarn webpack-dev\", name: \"Webpack\", prefixColor: \"yellow\"},\n  { command: \"sleep 4; yarn serve --port \" + port, name: \"Bridgetown\", prefixColor: \"green\"},\n-  { command: \"sleep 8; yarn sync\", name: \"Live\", prefixColor: \"blue\"}\n+  { command: \"sleep 8; yarn sync\", name: \"Live\", prefixColor: \"blue\"},\n+  { command: \"sleep 12; yarn netlify-cms-proxy-server\", name: \"CMS\", prefixColor: \"red\"}\n], {\n  restartTries: 3,\n  killOthers: ['failure', 'success'],\n}).then(() =\u003e { console.log(\"Done.\");console.log('\\033[0G'); }, () =\u003e {});\n```\n\nNow the CMS will start with the rest of your server. You can play with it locally and check for errors, but the real power is once we get this live!\n\n### Create GitHub repo\n\nCreate a new GitHub repository and push this code to your default branch. If you have the [GitHub CLI](https://github.com/cli/cli), that process would look something like:\n\n```bash\n# I am using main as my default branch\ngco -b main\ngit add .\ngit commit -m \"feat: :tada: Initial\" -m \"Initial commit\"\ngh repo create bridgetown-netlify-cms-starter --public\ngit push --set-upstream origin main\n```\n\n### Create Netlify site\n\n1. Log in to Netlify\n1. Press the 'New site from Git' button\n1. Choose your repository\n1. Set your build command to `yarn deploy`\n1. Set the publish directory to `output`\n1. Deploy site\n\n![Alt Text](https://dev-to-uploads.s3.amazonaws.com/i/n0mh8jeu3wedgfz81wwt.jpg)\n\n### Netlify Identity\n\nIn order to log in to our CMS, we need to enable Netlify Identity on the `Identity` tab for our new site.\n\n#### Registration preferences\n\n__Before setting this, make sure you have created your first user to make your life easier (next section)__\nI would recommend setting this to invite only vs open once you have a configured user.\n\n#### External providers\n\nI find it is way easier to use an external provider (like GitHub) and highly suggest doing the same. There is a weird bug with the invitation links that I haven't solved yet for normal signups and this will remove that headache.\n\n#### Services\n\nEnable the Git Gateway to allow Netlify to connect your site to GitHub's API, which is required for using Netlify CMS.\n\n### Using the CMS\n\nNavigate to your deployed site and go to the `/admin` route. For example, the admin page for this starter is located at `https://bridgetown-netlify-cms-starter.netlify.app/admin`\n\nYour page should look like:\n\n![Netlify CMS login](https://dev-to-uploads.s3.amazonaws.com/i/re1u6hkm71qy720w10l2.jpg)\n\nClick the `Continue with GitHub` button. After you authenticate with GitHub, you should be redirected to your CMS!\n\n![Netlify CMS](https://dev-to-uploads.s3.amazonaws.com/i/jfdgw5nazt1bzuwadnhn.jpg)\n\n__Note:__ At this point, I would go back to your site settings and set the registration preferences to __invite only__!\n\n### Publishing\n\nFrom here you should be all set! You can create a new blog post, edit content on your pages, upload images, and more!\n\nAfter changing the index page for example, hit the `publish` button at the top of the page and publish now.\n\nWhat this will do is add a commit to your GitHub repo with the changes and if Netlify is set to deploy your default branch (this is default behavior), the Netlify will automatically redeploy the site with the changes.\n\nTo go back to your site, change your url to the root, or click the user icon in the top right of the CMS and log out. \n\n__Note:__ there is some weird bug that pops up after it logs you out. Either refresh the page or just change the url back to your root url.\n\nAfter the deploy finishes (it is very quick if you followed along), the content you changed or added should be reflected! I updated the index page, and my site now looks like:\n\n![Alt Text](https://dev-to-uploads.s3.amazonaws.com/i/y2q7dh2fqorxdnjxs151.jpg)\n\n### Wrap up\n\nFrom this point, you can continue changing your Bridgetown site, and configure the CMS config file as needed. Hopefully this gives you all the excuse you need to try [Bridgetown](https://www.bridgetownrb.com)! If you encounter any issues or find a bug, feel free to report it on the [repository](https://github.com/andrewmcodes/bridgetown-netlify-cms-starter).  \n\nYou can find the demo for this project [here](https://bridgetown-netlify-cms-starter.netlify.app/).\n\nHappy coding!",
    "positive_reactions_count": 29,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--D88p5yFe--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/reoqsgic8tt85i2d3r2x.jpg",
    "tag_list": ["tutorial", "beginners", "bridgetown", "cms"],
    "canonical_url": "https://dev.to/andrewmcodes/creating-a-blog-with-bridgetown-and-netlify-cms-1d1a",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 334462,
    "title": "Rails 6 Band-Aid for Webpacker::Manifest::MissingEntryError",
    "description": "At CodeFund, we try to keep our dependencies, including Rails, as up to date as possible. We upgraded...",
    "published": true,
    "published_at": "2020-05-13T23:47:04.114Z",
    "slug": "rails-6-band-aid-for-webpacker-manifest-missingentryerror-1o21",
    "path": "/andrewmcodes/rails-6-band-aid-for-webpacker-manifest-missingentryerror-1o21",
    "url": "https://dev.to/andrewmcodes/rails-6-band-aid-for-webpacker-manifest-missingentryerror-1o21",
    "comments_count": 3,
    "public_reactions_count": 14,
    "page_views_count": 3472,
    "published_timestamp": "2020-05-13T23:47:04Z",
    "body_markdown": "At [CodeFund](https://codefund.io), we try to keep our dependencies, including Rails, as up to date as possible. We upgraded to Rails 6 a few months ago, and I've pretty much forgotten any issues we ran into during the upgrade. For what it's worth, the upgrade was very smooth, but there was one issue we ran into that was lost in my memories before a friend showed me a familiar error message today:\n\n```sh\n# Webpacker::Manifest::MissingEntryError:\n#   Webpacker can't find foo/bar in /app/public/packs-test/manifest.json. Possible causes:\n#   1. You want to set webpacker.yml value of compile to true for your environment\n#      unless you are using the `webpack -w` or the webpack-dev-server.\n#   2. webpack has not yet re-run to reflect updates.\n#   3. You have misconfigured Webpacker's config/webpacker.yml file.\n#   4. Your webpack configuration is not creating a manifest.\n#   Your manifest contains:\n#   {\n#   }\n```\n\nThe error essentially is letting you know that Webpacker tried to locate the `foo/bar` asset entry in the `manifest.json` file that gets generated when Webpacker compiles your test assets, but it could not find it. Even more interesting, the manifest is completely empty.\n\nIt is worth noting that I _only ran into this issue in my test environment_, which is exactly what was happening to my buddy. If your Webpacker config is close to the default, assets are precompiled into `public/packs-test/*`, which you an see on the second line of the error above.\n\nAn issue was created on Webpacker's GitHub repo that basically describes this scenario. It is [issue #1494](https://github.com/rails/webpacker/issues/1494) if you are curious. However, all of the solutions that worked for others were not working for me, nor my friend who had also found the same issue.\n\nAt the time, I figured that we had incorrectly configured something and eventually gave up trying to find the cause and instead focused on finding a solution. It is also worth noting that we are using Minitest at CodeFund, but my friend was using Rspec, which rules out one of my earlier ideas that this could be a Minitest specific issue.\n\nI am still not quite sure the cause, and one of my hopes for posting this article is that someone else has run across this and actually fixed the core issue instead of the band-aid I chose to go with.\n\nIf you encounter this type of error in your tests while upgrading to Rails 6, here is one way of solving it:\n\n```ruby\n# test/test_helper.rb\n\nunless Webpacker.compiler.fresh?\n  puts \"== Webpack compiling ==\"\n  Webpacker.compiler.compile\n  puts \"== Webpack compiled ==\"\nend\n```\n\nAdding this method in your `test_helper` or `spec_helper` before the tests run will force Webpacker to make sure the test-packs are present and up to date, and if not it will compile them. If you do some source diving, you will see this comment above the `fresh?` method in `Webpacker::Compiler`:\n\n\u003e Returns true if all the compiled packs are up to date with the underlying asset files.\n\nThe reason the manifest is empty is because Webpacker needs to be compiled, because the currently compiled packs are not up to date or were never generated in the first place. Webpacker is supposed to do this automatically, but for my friend and I, it wasn’t. \n\nYou can see the usage of this in [CodeFund's `test_helper.rb`](https://github.com/gitcoinco/code_fund_ads/blob/5f9a7165b7a49ed73a81c7987e8a13ba18f9e0a6/test/test_helper.rb#L22). If you try to run the test suite and `public/packs-test` has not been created or the test packs are not up to date, you will see this in your terminal:\n\n```sh\n➜ bin/rails test\n== Webpack compiling ==\n== Webpack compiled ==\n\n# Running tests with run options --seed 1234:\n\n...\n```\n\nAs to why this is happening, I am still not sure. I am still leaning towards this being caused from a misconfiguration or some behavior specific to our setup, but after being asked about it today, I figured it was worth sharing in case you run across it in your own app.\n\nIf you have run into this before and fixed the underlying cause, please leave a comment below or mention me on [Twitter](https://twitter.com/andrewmcodes)! I will make sure to update this post if we up solving it. In the meantime, the solution above is working great for us.\n\nHappy ~~coding~~ debugging!!",
    "positive_reactions_count": 14,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--5PHOSsNU--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/faaghdvraaxw5mc2fdby.jpg",
    "tag_list": ["rails", "webpacker", "ruby", "testing"],
    "canonical_url": "https://dev.to/andrewmcodes/rails-6-band-aid-for-webpacker-manifest-missingentryerror-1o21",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 329327,
    "title": "Build and deploy a static site with Ruby, Bridgetown, TailwindCSS, and Netlify",
    "description": "Demo Repository Demo Website            What is Bridgetown   According to their website, Bridgetown...",
    "published": true,
    "published_at": "2020-05-07T03:50:01.208Z",
    "slug": "build-and-deploy-a-static-site-with-ruby-bridgetown-tailwindcss-and-netlify-3934",
    "path": "/andrewmcodes/build-and-deploy-a-static-site-with-ruby-bridgetown-tailwindcss-and-netlify-3934",
    "url": "https://dev.to/andrewmcodes/build-and-deploy-a-static-site-with-ruby-bridgetown-tailwindcss-and-netlify-3934",
    "comments_count": 2,
    "public_reactions_count": 37,
    "page_views_count": 1166,
    "published_timestamp": "2020-05-07T03:50:01Z",
    "body_markdown": "- [Demo Repository](https://github.com/andrewmcodes/bridgetown_tailwind)\n- [Demo Website](https://bridgetown-tailwind.netlify.app)\n\n## What is Bridgetown\n\nAccording to their [website](https://www.bridgetownrb.com), Bridgetown is:\n\n\u003e A Webpack-aware, Ruby-powered static site generator for the modern Jamstack era.\n\nYou may think of JavaScript when you hear the term \"static site generator\", but one of the oldest, and most popular static site generators is Jekyll, and it is also built with Ruby. The Jekyll project is over 10 years old, and remains a popular tool. Bridgetown seems to be a fresh take on Jekyll, and brings a nice balance of Ruby and JavaScript.\n\nIt is also worth pointing out that Bridgetown is pre version 1.0 at the time of writing. The stability notice on their README is worth keeping in mind:\n\n\u003eGiven Bridgetown's strong inherited bones (see background below) and our continued emphasis on good testing, we're pretty confident Bridgetown is ready to use today. But…you might want to exercise a bit of extra caution using this in production. 🙂 We are already (after all, the Bridgetown website is built with Bridgetown), but YMMV.\n\n## Tutorial\n\nLet's create our first static site with Bridgetown!\n\n### Prerequisites\n\nMake sure you have Ruby, Bundler, Node, and Yarn installed. These are the versions I am using:\n\n```sh\n➜ ruby -v\nruby 2.6.6p146 (2020-03-31 revision 67876) [x86_64-darwin19]\n\n➜ bundler -v\nBundler version 2.1.4\n\n➜ node -v\nv13.11.0\n\n➜ yarn -v\n1.22.4\n```\n\n### Install Bridgetown\n\n```sh\ngem install bridgetown -N\n```\n\n### Create new project\n\n```sh\nbridgetown new bridgetown_tailwind\ncd bridgetown_tailwind\nyarn start\n```\n\nYou can now view your site live at http://localhost:4000/\n\n### Tailwind\n\nLet's add TailwindCSS to our new site:\n\n```sh\nyarn add -D tailwindcss postcss-import postcss-loader\nyarn tailwind init\n```\n\nThis will create a `tailwind.config.js` file at the root of our directory.\n\nWe will want to run PurgeCSS on our files, so update `tailwind.config.js` to be:\n\n```js\nmodule.exports = {\n  purge: {\n    mode: 'production',\n    content: ['./src/**/*.html'],\n  },\n  theme: {\n    extend: {},\n  },\n  variants: {},\n  plugins: [],\n}\n```\n\nNext, we need to update our Webpack config file to use PostCSS.\n\nIn `webpack.config.js`, change:\n\n```js\n{\n  test: /\\.(s[ac]|c)ss$/,\n  use: [\n    MiniCssExtractPlugin.loader,\n    \"css-loader\",\n    {\n      loader: \"sass-loader\",\n      options: {\n        sassOptions: {\n          includePaths: [\n            path.resolve(__dirname, \"src/_components\"),\n            path.resolve(__dirname, \"src/_includes\"),\n          ],\n        },\n      },\n    },\n  ],\n},\n```\n\nto:\n\n```js\n{\n  test: /\\.(s[ac]|c)ss$/,\n  use: [\n    MiniCssExtractPlugin.loader,\n    \"css-loader\",\n    {\n      loader: \"sass-loader\",\n      options: {\n        sassOptions: {\n          includePaths: [\n            path.resolve(__dirname, \"src/_components\"),\n            path.resolve(__dirname, \"src/_includes\"),\n          ],\n        },\n      },\n    },\n    {\n      loader: \"postcss-loader\",\n      options: {\n        ident: \"postcss\",\n        plugins: [\n          require(\"postcss-import\"),\n          require(\"tailwindcss\"),\n          require(\"autoprefixer\"),\n        ],\n      },\n    },\n  ],\n},\n```\n\nLastly, we need to import Tailwind into our stylesheet.\n\nOpen `./frontend/styles/index.scss` and replace the default styles with:\n\n```css\n@import 'tailwindcss/base';\n@import 'tailwindcss/components';\n@import 'tailwindcss/utilities';\n```\n\nIf we run `yarn start` again, we should see Tailwind styles being applied!\n\n### Update styles\n\nThis step is optional but we can update some of our styles if we want.\n\nHere is what I did:\n\n```css\n// frontend/styles/index.scss\n\nbody {\n  display: flex;\n  min-height: 100vh;\n  flex-direction: column;\n}\n\nmain {\n  flex: 1;\n}\n```\n\n```html\n\u003c!-- src/_layouts/default.html --\u003e\n\n\u003c!doctype html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e\n    {% include head.html %}\n  \u003c/head\u003e\n  \u003cbody class=\"min-h-screen {{ page.layout }} {{ page.page_class }}\"\u003e\n    {% include navbar.html %}\n\n    \u003cmain class=\"text-gray-700\"\u003e\n      {{ content }}\n    \u003c/main\u003e\n\n    {% include footer.html %}\n  \u003c/body\u003e\n\u003c/html\u003e\n\n```\n\n```html\n\u003c!-- src/_layouts/home.html --\u003e\n---\nlayout: default\n---\n\n\u003cdiv class=\"w-full px-5 py-12 bg-red-500\"\u003e\n  \u003ch1 class=\"mb-4 text-6xl text-white\"\u003eHome\u003c/h1\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"mx-auto\"\u003e\n  \u003cdiv class=\"px-5 py-12\"\u003e\n    {{ content }}\n  \u003c/div\u003e\n\u003c/div\u003e\n```\n\n```html\n\u003c!-- src/_layouts/page.html \u0026 src/_layouts/post.html --\u003e\n---\nlayout: default\n---\n\n\u003cdiv class=\"w-full px-5 py-12 bg-red-500\"\u003e\n  \u003ch1 class=\"mb-4 text-6xl text-white\"\u003e{{ page.title }}\u003c/h1\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"mx-auto\"\u003e\n  \u003cdiv class=\"px-5 py-12\"\u003e\n    {{ content }}\n  \u003c/div\u003e\n\u003c/div\u003e\n```\n\n```html\n\u003c!-- src/_includes/navbar.html --\u003e\n\n\u003cheader class=\"text-gray-700 body-font\"\u003e\n  \u003cdiv class=\"container flex flex-col flex-wrap items-center p-5 mx-auto md:flex-row\"\u003e\n    \u003ca class=\"flex items-center mb-4 font-medium text-gray-900 title-font md:mb-0\" href=\"/\"\u003e\n      \u003csvg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" class=\"w-10 h-10 p-2 text-white bg-red-500 rounded-full\" viewBox=\"0 0 24 24\"\u003e\n        \u003cpath d=\"M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5\"\u003e\u003c/path\u003e\n      \u003c/svg\u003e\n      \u003cspan class=\"ml-3 text-xl\"\u003eBridgetown + TailwindCSS\u003c/span\u003e\n    \u003c/a\u003e\n    \u003cnav class=\"flex flex-wrap items-center justify-center text-base md:ml-auto\"\u003e\n      \u003ca href=\"/about\" class=\"mr-5 hover:text-gray-900\"\u003eAbout\u003c/a\u003e\n    \u003c/nav\u003e\n  \u003c/div\u003e\n\u003c/header\u003e\n```\n\n```html\n\u003c!-- src/_includes/footer.html --\u003e\n\n\u003cfooter class=\"text-white bg-red-500 body-font\"\u003e\n  \u003cdiv class=\"container flex flex-col items-center px-5 py-8 mx-auto sm:flex-row\"\u003e\n    \u003cp class=\"mt-4 text-sm sm:py-2 sm:mt-0\"\u003e© 2020 Andrew Mason\u003c/p\u003e\n    \u003cspan class=\"inline-flex justify-center mt-4 sm:ml-auto sm:mt-0 sm:justify-start\"\u003e\n      \u003ca class=\"ml-3\" href=\"https://twitter.com/andrewmcodes\"\u003e\n        \u003csvg fill=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" class=\"w-5 h-5\" viewBox=\"0 0 24 24\"\u003e\n          \u003cpath d=\"M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z\"\u003e\u003c/path\u003e\n        \u003c/svg\u003e\n      \u003c/a\u003e\n    \u003c/span\u003e\n  \u003c/div\u003e\n\u003c/footer\u003e\n```\n\nIf you added these styles, your homepage should now look like:\n\n![homepage](https://dev-to-uploads.s3.amazonaws.com/i/l8p4oi78c2w1b11lesjz.jpg)\n\n### Deployment with Netlify\n\n1. Login to Netlify\n2. Select `New Site from Git`\n![Netlify - New Site](https://dev-to-uploads.s3.amazonaws.com/i/pemhv37uf4tq74pr7x4r.jpg)\n3. Choose your Git provider\n4. Select your repo\n5. Set your `Build Command` to `yarn deploy`\n6. Set your `Publish directory` to `output/`\n![Netlify - Deploy Settings](https://dev-to-uploads.s3.amazonaws.com/i/7eao24kpdn9l776nidwm.jpg)\n7. Click `Deploy site`\n\nYour site will deploy and you should be able to view it at the preview link that Netlify provides!\n\n## Summary\n\nIf you have had Ruby/Rails/Jekyll experience, you should feel right at home with Bridgetown. Bridgetown also removes the barrier to entry for integrating webpack and all the goodies the JavaScript community has to offer.\n\nEven though the library is still pre 1.0, I think it would still be worth your time to check out [Bridgetown](https://www.bridgetownrb.com) and see what you think!\n\nYou can find the code for this tutorial [here](https://github.com/andrewmcodes/bridgetown_tailwind) or view [demo](https://bridgetown-tailwind.netlify.app).\n\nHappy coding!\n",
    "positive_reactions_count": 37,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--9eQfXSW6--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/xctbps1usj2v5ege60hu.jpg",
    "tag_list": ["ruby", "tutorial", "beginners", "javascript"],
    "canonical_url": "https://dev.to/andrewmcodes/build-and-deploy-a-static-site-with-ruby-bridgetown-tailwindcss-and-netlify-3934",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 324010,
    "title": "Instantly speed up your Rails application by self-hosting your fonts",
    "description": "Instantly speed up your Rails application by self-hosting your fonts   A font can make or br...",
    "published": true,
    "published_at": "2020-05-01T08:21:29.290Z",
    "slug": "instantly-speed-up-your-rails-application-by-self-hosting-your-fonts-526d",
    "path": "/andrewmcodes/instantly-speed-up-your-rails-application-by-self-hosting-your-fonts-526d",
    "url": "https://dev.to/andrewmcodes/instantly-speed-up-your-rails-application-by-self-hosting-your-fonts-526d",
    "comments_count": 3,
    "public_reactions_count": 39,
    "page_views_count": 697,
    "published_timestamp": "2020-05-01T08:21:29Z",
    "body_markdown": "# Instantly speed up your Rails application by self-hosting your fonts\n\nA font can make or break your design, and as a result many of us are probably not using the default system fonts. [Google Fonts](https://fonts.google.com) makes it really easy to find the perfect font, but it can come with a performance cost. If you are loading a font directly from Google, the following tutorial is guaranteed to speed up your Rails application.\n\nMake your Rails app do this:\n\n![Cowboy Pooh Gif](https://media.giphy.com/media/MFgOHNWX6dDxwJ7bKe/giphy.gif)\n\n(GET IT?!?)\n\nTo demonstrate, let's build a quick demo app.\n\nThis is a tutorial, but I will assume you have a basic understanding of Ruby on Rails. If not, and you need me to elaborate on anything, let me know in the comments.\n\n## Create a new Rails project\n\n```sh\nrails new self_hosted_webfonts_demo --skip-sprockets --skip-spring\ncd self_hosted_webfonts_demo\n```\n\nI am using Rails 6.0.2.2, which comes default with Webpacker 4.2.2, but I want to take advantage of features in v5, so I am going to update the gem and node package to v5.1.1. You are not required to do this in your application, but will need to if you are following along with this tutorial. Make sure you run `bundle install \u0026\u0026 yarn install`.\n\nAfter we have upgraded webpacker, let's create a basic Welcome controller, and set the index as the root route in `config/routes.rb`:\n\n```sh\nbin/rails generate controller welcome index\n```\n\n```rb\n# config/routes.rb\n\nRails.application.routes.draw do\n  get \"welcome/index\"\n  root \"welcome#index\"\nend\n```\n\n## Choose a font\n\nNow that we have a landing page, we should snazz it up a bit with a nice font. If you're like me, this is usually when you head over to [Google Fonts](https://fonts.google.com). To keep it simple, I am going to use [Lato](https://fonts.google.com/specimen/Lato). Since I am not too sure all the styles and weights I need right now, I will just go ahead and select all the available styles (sound familiar?) and copy the link that Google provides.\n\n![Google Fonts](https://dev-to-uploads.s3.amazonaws.com/i/6qbu8zru7kgr2a2q9f6u.png)\n\nNow that we have our fonts, let’s add the link to the head of our application in `app/views/layouts/application.html.erb` on the line above your `stylesheet_link_tag` (line #7 if you are on a fresh Rails app):\n\n```html\n\u003clink href=\"https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900\u0026display=swap\" rel=\"stylesheet\"\u003e\n```\n\nWhile we are here, let's change `stylesheet_link_tag` to `stylesheet_pack_tag` and create our application styles file:\n\n```diff\n- \u003c%= stylesheet_link_tag \"application\", media: \"all\", \"data-turbolinks-track\": \"reload\" %\u003e\n+ \u003c%= stylesheet_pack_tag \"application\", media: \"all\", \"data-turbolinks-track\": \"reload\" %\u003e\n```\n\n```sh\ntouch `app/javascript/packs/application.scss`\n```\n\nInside of `application.scss`, add the following CSS rules to specify the font family:\n\n```scss\n// app/javascript/packs/application.scss\n\nhtml {\n  font-family: 'Lato', sans-serif;\n}\n```\n\nNow if we start the Rails server (`bin/rails s`), and navigate to `localhost:3000`, we should see our simple landing page being rendered with our nice, new font.\n\n![Welcome Page](https://dev-to-uploads.s3.amazonaws.com/i/tv7nojfhjvcwl92k2iqm.png)\n\n## The Problem...\n\nEven though our view looks much better with the new font, we have just degraded the performance of our application and introduced a render blocking resource. When we load Lato, we are actually loading a stylesheet, and the browser will not render our page until it finishes retrieving the file from Google's servers.\n\nIntroducing a render blocking resource isn't great, but what's worse is we are now relying on Google to send us that file for us to render our page. Users will now be waiting longer for the page to load, and that time will fluctuate depending on how much traffic Google’s servers are handling.\n\n![Lighthouse Audit: CDN](https://dev-to-uploads.s3.amazonaws.com/i/gwcrkehoye2yprldblz6.png)\n\n\nNot great. Lighthouse isn't happy about it either.\n\nHowever, there are solutions to this problem. I am going to show you the method I believe is the fastest to implement and easiest to understand, but understand there are several other fixes you could use instead with their own pros and cons.\n\n## The Solution\n\nEnter the [typefaces](https://www.bricolage.io/typefaces-easiest-way-to-self-host-fonts/) project from Gatsby founder [Kyle Mathews](https://twitter.com/kylemathews). I highly recommend reading about his motivations behind the project, but the TL;DR is we can use Webpacker to install fonts on our server and self-host them ourselves instead of relying on Google.\n\nSince I am already hosting everything else on my server, it makes perfect sense in a Rails environment to take this approach - and it's super quick to swap out Google Fonts for this solution.\n\nA quick search on NPM for `typeface lato` will reveal the package we are looking for, which we can easily install:\n\n```sh\nyarn add typeface-lato\n```\n\nNow let's remove the old way we were getting the font:\n\n```diff\n- \u003clink href=\"https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900\u0026display=swap\" rel=\"stylesheet\"\u003e\n```\n\nAnd the last step is requiring the package in our `application.js` pack:\n\n```js\n// app/javascript/packs/application.js\nrequire(\"typeface-lato\")\n```\n\nIf we fire the Rails server back up and checkout `localhost:3000`, the font should still be Lato! A quick look at the `webpacker-dev-server` logs will reveal that we are now self-hosting the same font styles and weights that we were before:\n\n![webpack-dev-server logs](https://dev-to-uploads.s3.amazonaws.com/i/mvw1wsa4g015rvv2iabc.png)\n\nLet's see if we have fixed the performance regression via Lighthouse:\n\n![Lighthouse Audit: Self Hosted](https://dev-to-uploads.s3.amazonaws.com/i/3a17kj9bjoct5nj1vp4x.png)\n\nLighthouse is no longer reporting a render blocking resource, we have boosted our performance!\n\n## Summary\n\nWe should be good to go! This is a simple, quick migration, which will reduce your time to first meaningful paint, and overall performance. It is also easily overlooked (speaking from personal experience).\n\nIt is worth noting that these Lighthouse audits were run against the Rails development server, and are not a true substitute for running them in production, but should give us a good enough idea of where we are at. For more accurate results, you should run these audits in production or start the application in production mode locally.\n\nThis change also positions you to make further enhancements, like requiring the fonts in a separate JavaScript pack, which will allow you to take advantage of `javascript_packs_with_chunks_tag`. I will leave that for you to explore, but you can see an example, along with the code for this tutorial, [here](https://github.com/andrewmcodes/self_hosted_webfonts_demo).\n\nHopefully this was helpful! If you have taken another approach, I would be curious to hear about it in the comments.\n\nHappy coding!\n",
    "positive_reactions_count": 39,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--W7W8Fxl1--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/4hykmvt7vc44ahrob27f.jpg",
    "tag_list": ["rails", "tutorial", "ruby", "beginners"],
    "canonical_url": "https://dev.to/andrewmcodes/instantly-speed-up-your-rails-application-by-self-hosting-your-fonts-526d",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 284010,
    "title": "Rails Coverage Tools: CodeFactor",
    "description": "CodeFactor   According to their documentation:   CodeFactor instantly performs Code Review w...",
    "published": true,
    "published_at": "2020-03-19T02:35:00.170Z",
    "slug": "rails-coverage-tools-codefactor-3ee2",
    "path": "/andrewmcodes/rails-coverage-tools-codefactor-3ee2",
    "url": "https://dev.to/andrewmcodes/rails-coverage-tools-codefactor-3ee2",
    "comments_count": 0,
    "public_reactions_count": 10,
    "page_views_count": 119,
    "published_timestamp": "2020-03-19T02:35:00Z",
    "body_markdown": "# [CodeFactor](https://codefactor.io)\n\nAccording to their documentation:\n\n\u003e CodeFactor instantly performs Code Review with every GitHub Commit or PR. Zero setup time. Get actionable feedback within seconds. Customize rules, get refactoring tips and ignore irrelevant issues.\n\nIn addition to automated code review, CodeFactor also has auto-fix functionality, which is pretty cool.\n\nFor Rails apps specifically, CodeFactor can check:\n\n- Yamllint\n- ESLint\n- stylelint\n- Rubocop\n\nIf this sounds interesting, let's look at how to set this up.\n\n## Tutorial\n\nWe will be creating a demo app to showcase how to utilize CodeFactor on your projects. The completed code can be found [here](https://github.com/andrewmcodes/codefactor_demo) if you'd like to just look over that.\n\nIf you'd like to build it together, let's get started!\n\n### Setup\n\nLet's create a new Rails app and `cd` into it:\n\n```sh\nrails new codefactor_demo\ncd codefactor_demo\n```\n\n### Create Repository\n\nOpen GitHub and create a new repository. I named mine `codefactor_demo`.\n\nOpen your command line again and let's upstream our code.\n\n```sh\ngit add .\ngit commit -m \"first commit\"\ngit remote add origin https://github.com/YOUR_USERNAME/codefactor_demo.git\ngit push -u origin master\n```\n\nYour code should now be online in your repo.\n\n### Configuration\n\nNavigate to [codefactor.io](codefactor.io) and log in with your preferred method. I chose to use my GitHub account.\n\n![codefactor_landing_page_1](https://dev-to-uploads.s3.amazonaws.com/i/kpmyaynxl27u2wj7m0c8.jpg)\n\nOnce logged in, you should be taken to your dashboard.\n\n### Add Repository\n\nLet's add a new repository. From your CodeFactor dashboard, click `Add`, next to `Repositories`:\n\n![codefactor_dashboard_2](https://dev-to-uploads.s3.amazonaws.com/i/sjzxqhdmb7y02xask5n4.jpg)\n\nYou will be taken to a screen that will let you search and select your desired repo. I am adding our demo project repo:\n\n![codefactor_add_repository_3](https://dev-to-uploads.s3.amazonaws.com/i/mco0bzqakhopqvknbtng.jpg)\n\nClick the `Import` button to import the repository.\n\nOnce your repository has been imported, it will show up on your dashboard:\n\n![codefactor_updated_dashboard_4](https://dev-to-uploads.s3.amazonaws.com/i/qla2wc05dejze7zx0olp.jpg)\n\nIf we click on our repo, we will be taken to a show page for our repo:\n\n![codefactor_project_page_5](https://dev-to-uploads.s3.amazonaws.com/i/4z3mam2v9268hv5jpgng.jpg)\n\nFrom here you can look at information about your repository and configure settings for the tools CodeFactor will use to check your repo.\n\n### README Badge\n\nIf we would like to add the CodeFactor README badge to our project, click the badge in the top right corner of the project page:\n\n![codefactor_badge_6](https://dev-to-uploads.s3.amazonaws.com/i/1ucwzj36wn04cbj9ap0s.jpg)\n\nThis will open a modal with a few format options for our badge. I simply copied the markdown code and pasted it on my README.\n\nThis badge should update as your code quality changes according to CodeFactor. \n\n## Summary\n\nCodeFactor is a neat tool if you'd like to run some standard linters on your Rails project, like Rubocop and ESLint. The unfortunate part is that it doesn't look like you can add in tools other than the ones provided. The auto-fix functionality is really helpful if you'd not only like to run the linters but add a commit to the branch that fails checks.\n\nOverall, I think this is a tool worth checking out. However, since I don't personally use the available tools for Rails projects, it wasn't as helpful to me personally as I hoped. Hopefully you will find different!\n\n### Helpful links\n\n- [CodeFactor](https://www.codefactor.io)\n- [Demo repo](https://github.com/andrewmcodes/codefactor_demo)\n- [CodeFactor show page for demo repo](https://www.codefactor.io/repository/github/andrewmcodes/codefactor_demo)\n- [CodeFactor Default Configs](https://github.com/codefactor-io/default-configs)\n\nHappy coding!\n\nP.S. If you aren't sure how to set up ESLint, Rubocop, or the other listed linters, leave a comment or message me on [Twitter](https://twitter.com/andrewmcodes) and let me know if you'd like a post about this!",
    "positive_reactions_count": 10,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--r3fxyj27--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/p4417i8qwul797crls6p.jpg",
    "tag_list": ["rails", "beginners", "ruby", "tutorial"],
    "canonical_url": "https://dev.to/andrewmcodes/rails-coverage-tools-codefactor-3ee2",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 279134,
    "title": "A11Y in Rails: Automated Linting with AccessLint🎉",
    "description": "Accessibility (A11Y) testing cannot be fully automated, and requires special attention in order to ge...",
    "published": true,
    "published_at": "2020-03-12T08:16:53.035Z",
    "slug": "a11y-in-rails-automated-linting-with-accesslint-1618",
    "path": "/andrewmcodes/a11y-in-rails-automated-linting-with-accesslint-1618",
    "url": "https://dev.to/andrewmcodes/a11y-in-rails-automated-linting-with-accesslint-1618",
    "comments_count": 0,
    "public_reactions_count": 10,
    "page_views_count": 200,
    "published_timestamp": "2020-03-12T08:16:53Z",
    "body_markdown": "Accessibility (`A11Y`) testing cannot be fully automated, and requires special attention in order to get right. There are, however; some tools out there that can help us automate part of it and make it a first class concern.\n\n# AccessLint\n\nAccording to their documentation, [AccessLint](https://accesslint.com) is:\n\n\u003eAccessLint brings automated web accessibility testing into your development workflow. When a pull request is opened, AccessLint reviews the changes and comments with any new accessibility issues, giving you quick, timely, and targeted feedback, before code goes live.\n\n## Tutorial\n\nWe will be creating a demo app to showcase how to utilize AccessLint on your projects. The completed code can be found [here](https://github.com/andrewmcodes/access_lint_demo) if you'd like to just look over that.\n\nIf you'd like to build it together, let's get started!\n\n### Setup\n\nLet's create a new Rails app and `cd` into it:\n\n```sh\nrails new access_lint_demo\ncd access_lint_demo\n```\n\nInstall dependencies:\n\n```sh\nbundle install\nyarn install\n```\n\nAnd setup the database:\n\n```sh\nbin/rails db:setup\n```\n\nNow, let's start the Rails server:\n\n```shell\nrails s\n```\n\nIf you want to run the `webpack-dev-server`, run this in another tab:\n\n```shell\nbin/webpack-dev-server\n```\n\nIf you navigate to `localhost:3000` in your browser, you should see the Rails welcome page:\n\n![rails_welcome_page](https://dev-to-uploads.s3.amazonaws.com/i/prwqk92m70wgn1ddk1d6.jpg)\n\n### Create Repository\n\nOpen GitHub and create a new repository. I named mine `access_lint_demo`.\n\nOpen your command line again and let's upstream our code.\n\n```sh\ngit add .\ngit commit -m \"first commit\"\ngit remote add origin https://github.com/YOUR_USERNAME/access_lint_demo.git\ngit push -u origin master\n```\n\nYour code should now be online in your repo.\n\n### Configuration\n\nNavigate to [AccessLint](https://accesslint.com) in your browser, and click `Sign in with Github`:\n\n![access_lint_home_page](https://dev-to-uploads.s3.amazonaws.com/i/lbprkt2tbw896u55cgb0.jpg)\n\nAfter you authenticate with GitHub, you should be redirected back to the AccessLint setup page. Click `Set up a new installation`:\n\n![access_lint_setup](https://dev-to-uploads.s3.amazonaws.com/i/gbaaxts5xc5r5j5h6mga.jpg)\n\nYou should get redirected to the AccessLint app on the GitHub Marketplace. Click `Open Source` under the `Pricing and setup` header, and then `Install it for free`:\n\n![github_marketplace](https://dev-to-uploads.s3.amazonaws.com/i/vd45o2btqirbuan9ww93.jpg)\n\nChoose whether you want to install the AccessLint app for all your repos or specifically select your demo repo, and accept the permissions.\n\nAccessLint should now be installed!\n\n![access_lint_dashboard](https://dev-to-uploads.s3.amazonaws.com/i/2v0qsfyz3lr0l966uiqq.jpg)\n\n### Test it out\n\nLet's test it out on a new branch. Run the following in your terminal:\n\n```sh\ngit checkout -b access-lint-test\n```\n\nThis should create a new branch in your demo repo. Now, let's scaffold some code:\n\n```sh\nbin/rails g scaffold Post title:string content:text\nbin/rails db:migrate\n```\n\nThis will scaffold out some resources for us and add `Post` to our database schema. Most importantly, it will create some new views.\n\nRestart your Rails server and open `localhost:3000/posts` to make sure everything is working correctly\n\n![posts_index_page](https://dev-to-uploads.s3.amazonaws.com/i/hrg37lm6h228pdigdsq0.jpg)\n\nLet's also make a change to `app/views/posts/_form.html.erb` that will trigger a failing lint. We are going to add an inaccessible image to the Post index page:\n\nAdd the following to `app/views/posts/index.html.erb`:\n\n```html\n\u003cimg src=\"https://images.unsplash.com/photo-1486312338219-ce68d2c6f44d?ixlib=rb-1.2.1\u0026ixid=eyJhcHBfaWQiOjEyMDd9\u0026auto=format\u0026fit=crop\u0026w=1352\u0026q=80\"\u003e\n```\n\nSince this image does not have an `alt` attribute, it should be flagged by AccessLint.\n\nLet's commit this code to see if that is correct:\n\n```sh\ngit add .\ngit commit -m \"create Post resource\"\ngit push --set-upstream origin access-lint-test\n```\n\nNow open the repo on GitHub and open a pull request for these changes:\n\n![github_new_pr](https://dev-to-uploads.s3.amazonaws.com/i/xn951kddg8is90e3h3yd.jpg)\n\nAccessLint should run automatically if we have set it up correctly. After it runs, it should flag our missing `alt` attribute:\n\n![failing_access_lint](https://dev-to-uploads.s3.amazonaws.com/i/9l2azcm564jzsd26g2qg.jpg)\n\nLet's follow the instructions AccessLint has given us to fix the issue and add an `alt` tag to our image:\n\n```html\n\u003cimg alt=\"person using MacBook Pro\" src=\"https://images.unsplash.com/photo-1486312338219-ce68d2c6f44d?ixlib=rb-1.2.1\u0026ixid=eyJhcHBfaWQiOjEyMDd9\u0026auto=format\u0026fit=crop\u0026w=1352\u0026q=80\"\u003e\n```\n\nLet's commit this code to see if that fixes the issue:\n\n```sh\ngit add .\ngit commit -m \"add alt attribute to image on Post#index\"\ngit push\n```\n\nIf all is well, the AccessLint check should now pass!\n\n![passing_access_lint](https://dev-to-uploads.s3.amazonaws.com/i/ygmci46vcwlf8cqctyzh.jpg)\n\n## Summary\n\nAccessLint is a helpful tool if you want to automated web accessibility testing in your Rails app. Unfortunately, the tool is a bit limited currently.\n\nFrom the documentation:\n\n\u003eNote that server-side code (e.g. image_tag  and label_tag in Rails) is not evaluated. Only fully formed HTML tags will be tested.\n\nRegardless, AccessLint is a nice way to start introducing accessibility testing. Accessibility is very important when developing on the web, and this tool will help make sure your code does not prevent users from interacting with your web app. In future posts, we will continue investigate tools to help us with accessibility in our Rails apps. \n\nAs mentioned at the beginning of this post, you cannot fully automate accessibility testing away, and none of these tools are substitutes for actually learning accessibility best practices. \n\n### Helpful links\n\n- [W3C: Accessibility](https://www.w3.org/standards/webdesign/accessibility)\n- [The A11Y Project](https://a11yproject.com)\n- [Accessibility on Rails](https://reinteractive.com/posts/355-accessibility-on-rails)\n\nHappy coding!",
    "positive_reactions_count": 10,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--VTUCTlvK--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/s77t59q88yiaco675uqw.jpg",
    "tag_list": ["rails", "a11y", "tutorial", "beginners"],
    "canonical_url": "https://dev.to/andrewmcodes/a11y-in-rails-automated-linting-with-accesslint-1618",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 266471,
    "title": "Rails Coverage Tools: Coverband",
    "description": "Coverband   According to their documentation, Coverband is:   A gem to measure production co...",
    "published": true,
    "published_at": "2020-02-22T06:18:25.427Z",
    "slug": "rails-coverage-tools-coverband-54mg",
    "path": "/andrewmcodes/rails-coverage-tools-coverband-54mg",
    "url": "https://dev.to/andrewmcodes/rails-coverage-tools-coverband-54mg",
    "comments_count": 6,
    "public_reactions_count": 50,
    "page_views_count": 715,
    "published_timestamp": "2020-02-22T06:18:25Z",
    "body_markdown": "# Coverband\n\nAccording to their documentation, Coverband is:\n\n\u003eA gem to measure production code usage, showing a counter for the number of times each line of code that is executed. Coverband allows easy configuration to collect and report on production code usage. (...) The primary goal of Coverband is giving deep insight into your production runtime usage of your application code, while having the least impact on performance possible\n\nTL;DR\n\nCoverband gives you insights into what code is being loaded in your Rails application, which you can also think of as code that is being used by the application. This can be a very useful tool for refactoring, and removing code that is no longer used or needed.\n\n## Demo\n\nI will be working from [this repo](https://github.com/andrewmcodes/rails_coverage_tools). You can look through that code, or you can follow along by using [my Rails app template](https://github.com/andrewmcodes/rails_template) I used to create this project.\n\nThe rest of the tutorial will assume you already have a functioning Rails app!\n\n## Installation\n\nAdd the Coverband gem to your `Gemfile`. I personally decided to keep it in my development group, because I didn't see any value in having the dashboard available in production.\n\n```ruby\n# Gemfile\n\ngem \"coverband\", group: :development\n\n# or\n\ngroup :development do\n  gem \"coverband\"\nend\n```\n\nThen run:\n\n```sh\nbundle install\n```\n\n## Configuration\n\n### Redis\n\nCoverband stores coverage data in Redis. According to the documentation, the Redis endpoint is looked for in this order:\n\n```ruby\nENV['COVERBAND_REDIS_URL']\nENV['REDIS_URL']\nlocalhost\n```\n\nYou can also specifically set this in a Coverband initializer file. If you are using the template that I’m using then you should be all set, otherwise make sure you are running Redis locally, bundle the `redis` gem, and your app can access it.\n\n### Initializer\n\nLet's configure the gem. Create an initializer file for Coverband, which should look like the following:\n\n```ruby\n# config/coverband.rb\n\nCoverband.configure do |config|\n  config.ignore += [\"config/application.rb\",\n                    \"config/boot.rb\",\n                    \"config/puma.rb\",\n                    \"bin/*\",\n                    \"config/environments/*\",\n                    \"lib/tasks/*\",]\nend\n```\n\nThese settings just tell Coverband to ignore our specified files and paths. \n\n### Route\n\nNow, lets add a route for coverband so we can view the web dashboard:\n\n```ruby\n# config/routes.rb\n\nRails.application.routes.draw do\n  mount Coverband::Reporters::Web.new, at: \"/coverband\" if Rails.env.development?\nend\n```\n\nIt is worth noting that if you are running this tool in production, you should protect this route with proper authentication.\n\n## Usage\n\nWe should be all set to see what Coverband can provide us!\n\nFire up the Rails server and navigate to `localhost:3000/coverband`\n\nAlternatively, you can run the following Rake task and static files will be created in `coverage/`. I would recommend making sure this directory is added to your `.gitignore`.\n\n```sh\nrake coverband:coverage\n```\n\nYou should now be seeing is Coverband's mountable web interface to easily view Coverband reports.\n\n![coverband_1](https://dev-to-uploads.s3.amazonaws.com/i/k3eqawgyobre6zas94m1.jpg)\n\nIf we click on a file with 0% coverage, you will see the following message:\n\n\u003eThis file was never loaded during app runtime or loading (or was loaded before Coverband loaded)!\n\nBasically this mean the code inside the file has not been loaded, and therefore not used.\n\nIf we click on a file with partial coverage, you should see something like:\n\n![coverband_2](https://dev-to-uploads.s3.amazonaws.com/i/kluvsd2sagfwpbjz8es3.jpg)\n\nThis view will highlight the lines that have been used, and those that haven't. Take care before you start ripping out code though, it's possible that you just haven't exercised that code yet.\n\nIn the `posts_controller` file in my example above, the code inside our `new` and `create` methods is not being used. I am going to open up the UI, and create a new post. You will notice that the coverage report looks a little different now:\n\n![coverband_3](https://dev-to-uploads.s3.amazonaws.com/i/smks7r65kpjlpfan8cxj.jpg)\n\nIt is important to exercise some due diligence before removing code that Coverband flags. In the example above, after some investigation I realized I in fact do not need `config/spring.rb` because I am not using `spring` in this project. This is the power of this library, the ability to point you towards areas in your codebase that may be safe to remove; however, if I had removed the flagged code in the `posts_controller` then I would be in some trouble.\n\n### Tracking Gems\n\nIt is also possible to use Coverband to track gem usage. This is still in experimental stages and not recommended for production according to the docs.\n\nTo see it in action, first let's update our initializer:\n\n```ruby\n# config/initializers/coverband.rb\n\nCoverband.configure do |config|\n  config.track_gems = true\n  config.ignore += [\"config/application.rb\",\n                    \"config/boot.rb\",\n                    \"config/puma.rb\",\n                    \"bin/*\",\n                    \"config/environments/*\",\n                    \"lib/tasks/*\",]\nend\n\n```\n\nAccording to the docs:\n\n\u003e When tracking gems, it is important that Coverband#start is called before the gems to be tracked are required. The best way to do this is to require coverband before Bundle.require is called\n\nSo lets update `application.rb` to make sure coverband is loaded before `Bundler.require` is called:\n\n```ruby\n# config/application.rb\n\nrequire \"coverband\"\nBundler.require(*Rails.groups)\n```\n\nRestart the Rails server and you should now have a gem tab if you navigate back to `localhost:3000/coverband`.\n\n![coverband_4](https://dev-to-uploads.s3.amazonaws.com/i/nayxiegisac553pbk0wu.jpg)\n\nThis can help give you insight into gems that may be safe to remove.\n\n### Tracking Views\n\nThere is a config option to watch your views, but it was not working for me on `Rails 6.0.2.1` and `Ruby 2.7` so I won't go into it now.\n\nSee [the advanced configuration documentation](https://github.com/danmayer/coverband#advanced-config) for more information.\n\n## Summary\n\nCoverband is a great tool to help you find code in your Rails app that may be safe to remove. The tool is not perfect though, so take care that the code can actually be safely removed. I personally used this tool on [CodeFund's](https://github.com/gitcoinco/code_fund_ads) codebase and found some code that could be removed! And who doesn't like deleting code? Definitely recommend adding this tool to your tool belt.\n\n#### Links\n\n- [coverband gem](https://github.com/danmayer/coverband#advanced-config)\n- [rails template](https://github.com/andrewmcodes/rails_template)\n- [repo for this post](https://github.com/andrewmcodes/rails_coverage_tools)\n\nHappy Coding!\n",
    "positive_reactions_count": 50,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--S4UQ1SKp--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/mdxdk1kcmofl5upo23v3.jpg",
    "tag_list": ["rails", "codequality", "ruby", "tutorial"],
    "canonical_url": "https://dev.to/andrewmcodes/rails-coverage-tools-coverband-54mg",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 259335,
    "title": "Stopping a runaway Rails server",
    "description": "Many of us have been there. You hit ctrl-c on you Ruby on Rails server, but nothing happens. No matte...",
    "published": true,
    "published_at": "2020-02-11T03:50:59.556Z",
    "slug": "stopping-a-runaway-rails-server-7mg",
    "path": "/andrewmcodes/stopping-a-runaway-rails-server-7mg",
    "url": "https://dev.to/andrewmcodes/stopping-a-runaway-rails-server-7mg",
    "comments_count": 2,
    "public_reactions_count": 13,
    "page_views_count": 659,
    "published_timestamp": "2020-02-11T03:50:59Z",
    "body_markdown": "_Many of us have been there. You hit `ctrl-c` on you Ruby on Rails server, but nothing happens. No matter what keys you hit on your keyboard, the Rails server is still running, and you can't stop it. You have a runaway train on your hands._\n\n## The \u0010Problem\n\nIf you have ever developed with Ruby on Rails, there is a good chance you have encountered a runaway Rails server. This is basically an instance of the Ruby on Rails server that you cannot easily stop. \n\nTwo examples of when you may need this is if you try to start your Rails server and get an error message that one is already running, or you get into a weird state with pry and `ctrl-c` won't stop the server in a timely manner.\n\nRegardless of how you got to this point isn't really important, you have a runaway train on your hands, and you need to stop it.\n\nHere is how you can do that:\n\n## Shutup\n\n`shutup` is a gem to help you quickly stop a running Rails server.\n\nTo install the gem, make sure you have Ruby installed. \n\nType the following into your command line:\n\n```sh\ngem install shutup\n```\n\nNow, whenever you have a Rails server you want to stop, just type the following in your command line to shut it down:\n\n```sh\nshutup\n```\n\nIf the command succeeded, you should see something like this:\n\n```sh\n➜ shutup\nKilled process id: 46707\n```\n\nIf it fails, you will see:\n\n```sh\n➜ shutup\nError reading the pid file.\n```\n\n## Conclusion\n\nYou could achieve the same effect with Bash or ZSH aliases, or just running the entire process by hand, but this gem removes the need to do that. It's a simple gem, but it's one I install whenever I install a new version of Ruby. \n\nCheck it out at: [lorenzosinisi/shutup](https://github.com/lorenzosinisi/shutup)\n\nHappy coding!!",
    "positive_reactions_count": 13,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--Cq4d8SRl--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/xyh6ekm8qcw7piw6644p.jpg",
    "tag_list": ["rails", "ruby", "productivity", "gems"],
    "canonical_url": "https://dev.to/andrewmcodes/stopping-a-runaway-rails-server-7mg",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 256422,
    "title": "Hiding Ruby 2.7 Deprecation Warnings in Rails 6",
    "description": "Hiding Ruby 2.7 Deprecation Warnings in Rails 6   If you have upgraded your Rails app to Rub...",
    "published": true,
    "published_at": "2020-02-06T05:50:58.004Z",
    "slug": "hiding-ruby-2-7-deprecation-warnings-in-rails-6-2mil",
    "path": "/andrewmcodes/hiding-ruby-2-7-deprecation-warnings-in-rails-6-2mil",
    "url": "https://dev.to/andrewmcodes/hiding-ruby-2-7-deprecation-warnings-in-rails-6-2mil",
    "comments_count": 7,
    "public_reactions_count": 21,
    "page_views_count": 6731,
    "published_timestamp": "2020-02-06T05:50:58Z",
    "body_markdown": "# Hiding Ruby 2.7 Deprecation Warnings in Rails 6\n\nIf you have upgraded your Rails app to Ruby 2.7, you are probably seeing a lot of deprecation messages in your console. You should first make sure that none of these messages are coming from your code, and address them if they are! If the deprecations are coming mostly from Rails, it may be time to disable the messages and save yourself from messy terminal output.\n\nThe TL;DR is that you need to use `RUBYOPT='-W:no-deprecated -W:no-experimental'` to disable the deprecations. This will also disable experimental feature warnings as well.\n\nHere are some options you have to make that happen. But first, lets create a new Rails app to experiment with!\n\n## Generate a new Rails app with Ruby 2.7\n\nYou can either use the CLI or [this template](https://github.com/andrewmcodes/rails_template/generate).\n\nIf you use the CLI, I recommend something like:\n\n```sh\nrails new silence_ruby_2_7_deprecations -d postgresql --webpack=stimulus\n```\n\n## Method #1: Using `dotenv-rails`\n\nIf you are using the [dotenv-rails](https://github.com/bkeepers/dotenv/) gem, or another method of using `.env` files, simply add the following to your `.env` file:\n\n```sh\nexport RUBYOPT='-W:no-deprecated -W:no-experimental'\n```\n\nThen run the following in the root of the project:\n\n```sh\nsource .env\n```\n\nYou should no longer be seeing the Ruby 2.7 deprecation warnings coming out of Rails! 🎉\n\n## Method #2: Prefixing commands\n\nAnother option you have for ignoring the Ruby 2.7 deprecation warnings is to prefix all of your Rails commands with `RUBYOPT='-W:no-deprecated -W:no-experimental'`.\n\nExample:\n\n- `rails server` would become `RUBYOPT='-W:no-deprecated -W:no-experimental' rails server`\n- `rails console` would become `RUBYOPT='-W:no-deprecated -W:no-experimental' rails console`\n- etc.\n\nThis is obviously not ideal but it will work!\n\n## Method #3: Updating your environment\n\nIf you want to disable these deprecation messages everywhere, you can add the following to your `~/.zshrc` or `~/.bashrc`:\n\n`export RUBYOPT='-W:no-deprecated -W:no-experimental'`\n\nThis will disable deprecation and experimental feature warnings for all versions of Ruby, for all projects. I have heard of this creating issues for some so you may want to be careful using this method if you work on multiple apps that aren't on Ruby 2.7.\n\n[View repo for this post](https://github.com/andrewmcodes/silence-ruby-2-7-deprecations)\n\nHopefully this helps! Happy coding!\n",
    "positive_reactions_count": 21,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--D535Ke7d--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/mpx3qxiyimpvz7bti141.png",
    "tag_list": ["ruby", "rails", "beginners", "tutorial"],
    "canonical_url": "https://dev.to/andrewmcodes/hiding-ruby-2-7-deprecation-warnings-in-rails-6-2mil",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 248698,
    "title": "How to set up Ruby on Rails 6 and TailwindCSS 1.1.4",
    "description": "Tutorial   For the purpose of this tutorial, we will assume you have Ruby and the Rails gem...",
    "published": true,
    "published_at": "2020-01-26T07:12:44.021Z",
    "slug": "ruby-on-rails-and-tailwindcss-1-1-4-mm5",
    "path": "/andrewmcodes/ruby-on-rails-and-tailwindcss-1-1-4-mm5",
    "url": "https://dev.to/andrewmcodes/ruby-on-rails-and-tailwindcss-1-1-4-mm5",
    "comments_count": 6,
    "public_reactions_count": 68,
    "page_views_count": 2157,
    "published_timestamp": "2020-01-26T07:12:44Z",
    "body_markdown": "# Tutorial\n\nFor the purpose of this tutorial, we will assume you have Ruby and the Rails gem installed. Please visit the [Getting Started with Rails Guide](https://guides.rubyonrails.org/getting_started.html) if you do not.\n\nI will also be working through the creation of code in [this repo](https://github.com/andrewmcodes/tailwind_css_1_1_4_rails_demo). Please use the repo as a resource to help you in case you get stuck or open issues if it's broken!!\n\nI created this demo using the following:\n\n- Ruby 2.7\n- Node 13.7.0\n- Rails 6.0.2.1\n- Webpacker 4.2.2\n- TailwindCSS 1.1.4\n- psql (PostgreSQL) 12.1\n\n## Create a new Rails project\n\n```sh\nrails new tailwind_css_rails_demo -d postgresql\ncd tailwind_css_rails_demo\nrails db:create\n```\n\nThis will create a new Ruby on Rails project with PostgreSQL configured for you. You can omit the `-d postgresql` flag if you would prefer to use SQLite or MySQL.\n\n## Running Rails and Webpack\n\nI prefer to run the Rails server in one command line tab and webpack-dev-server in another since it's much faster. In development, Rails can tell whether the webpack-dev-server has compiled your packs and will compile them inline if it has not been done.\n\nLet's go ahead and get the app running:\n\n```sh\n# Terminal tab 1\nrails s\n```\n\nAnd webpack-dev-server:\n\n```sh\n# Terminal tab 2\n./bin/webpack-dev-server\n```\n\nYou should now see Rails welcome page if you navigate to `localhost:3000` in your browser.\n\n![Rails default information page](https://guides.rubyonrails.org/images/getting_started/rails_welcome.png)\n\n## Generate a new resource\n\nI personally like to see more than one record in the database for tutorials to make the app seem more \"real\". You can skip this part if you are not interested in adding some seed data, and would rather create a Home controller or something similar like [in the previous tutorial](https://dev.to/andrewmcodes/use-tailwind-css-1-0-in-your-rails-app-4pm4).\n\nIf you would like some records in your database, lets scaffold out a small resource:\n\n```sh\nrails generate scaffold Post title:string content:text\n```\n\nRails will then generate several files for us, but we will only focus on a few.\n\nUse the following command to run the generated migration:\n\n```sh\nrails db:migrate\n```\n\nNow, lets add some seed data. Open `db/seeds.rb` and add the following:\n\n```ruby\n# db/seeds.rb\n\n10.times do |n|\n  Post.create!(title:  \"Post title - ##{n}\", content: \"This is the content for the #{n.ordinalize} post.\")\nend\n```\n\nIt's not important for this tutorial for you to fully grok that code, but I would be happy to explain it in more detail if you reach out or let me know in the comments. The TL;DR is that we now have 10 unique Post records in our database.\n\nThe last thing we need to do before getting to the fun part is to update our `config/routes.rb` file to make the root path for the app the index page for posts.\n\n```ruby\n# config/routes.rb\n\nRails.application.routes.draw do\n  resources :posts\n  root to: \"posts#index\"\nend\n```\n\nRestart the Rails server, navigate to `localhost:3000`, and you should see a table with our random data, with links to other CRUD actions.\n\n## Install TailwindCSS\n\nNow to the fun stuff.\n\nRun the following command in your terminal to install TailwindCSS\n\n```sh\nyarn add tailwindcss\n```\n\nLet's also add the Tailwind config file:\n\n```sh\n./node_modules/.bin/tailwind init\n```\n\nThis should create a `tailwind.config.js` file at the root of your project. This file can be used to customize the TailwindCSS defaults, add plugins, and more. You can learn more about this from [Tailwind's docs](https://tailwindcss.com/docs/configuration)\n\nWe also need to update our PostCSS config that comes default with Rails 6 with two new requires:\n\n```js\nrequire('tailwindcss'),\nrequire('autoprefixer'),\n```\n\nI have been told the best order for these requires is as I have them below, but I think just adding them to the top of your PostCSS config will work for the majority of people:\n\n```js\n// postcss.config.js\n\nmodule.exports = {\n  plugins: [\n    require('autoprefixer'),\n    require('postcss-import'),\n    require('tailwindcss'),\n    require('postcss-flexbugs-fixes'),\n    require('postcss-preset-env')({\n      autoprefixer: {\n        flexbox: 'no-2009'\n      },\n      stage: 3\n    })\n  ]\n}\n```\n\n## Configure Tailwind\n\n_There are a few ways you can do this but this is my personal preference._\n\nRemove the assets folder, we won't be needing it since we will rely fully on Webpacker:\n\n```sh\nrm -rf app/assets\n```\n\nCreate a new stylesheet file:\n\n```sh\ntouch app/javascript/src/application.scss\n```\n\nSince we are using `postcss-import` and Webpack, the [Tailwind docs](https://tailwindcss.com/docs/installation/) instruct us to add the following to our stylesheet file:\n\n```scss\n// app/javascript/src/application.scss\n\n@import \"tailwindcss/base\";\n@import \"tailwindcss/components\";\n@import \"tailwindcss/utilities\";\n```\n\nWe also need to add following line in `app/javascript/packs/application.js`:\n\n```js\nimport '../src/application.scss'\n```\n\nThe last step is to tell Rails to use our pack files. In `app/views/layouts/application.html.erb`, change:\n\n```erb\n\u003c%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %\u003e\n\u003c%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %\u003e\n```\n\nto:\n\n```erb\n\u003c%= stylesheet_pack_tag 'application', 'data-turbolinks-track': 'reload' %\u003e\n\u003c%= javascript_pack_tag 'application', 'data-turbolinks-track': 'reload' %\u003e\n```\n\nRestart the Rails server and webpack-dev-server and you should now see the following on `localhost:3000`:\n\n![tailwind home index](https://i.imgur.com/AaxxvBk.jpg)\n\nTailwind should now be working so lets tweak our views to see some Tailwind goodness.\n\n## Update views to use TailwindCSS\n\nIn `app/views/layouts/application.html.erb` change:\n\n```html\n\u003cbody\u003e\n  \u003c%= yield %\u003e\n\u003c/body\u003e\n```\n\nto:\n\n```html\n\u003cbody class=\"min-h-screen bg-gray-100\"\u003e\n  \u003cdiv class=\"container mx-auto\"\u003e\n    \u003c%= yield %\u003e\n  \u003c/div\u003e\n\u003c/body\u003e\n```\n\nand in `app/views/posts/index.html.erb` lets replace the scaffolded page with the following:\n\n```html\n\u003cp id=\"notice\"\u003e\u003c%= notice %\u003e\u003c/p\u003e\n\u003ch1 class=\"font-semibold text-4xl text-gray-700 my-8\"\u003ePosts\u003c/h1\u003e\n\u003cdiv class=\"w-full xl:w-8/12 mb-12 xl:mb-0 px-4\"\u003e\n  \u003cdiv class=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\"\u003e\n    \u003ctable class=\"items-center w-full bg-transparent border-collapse\"\u003e\n      \u003cthead\u003e\n        \u003ctr\u003e\n          \u003cth class=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\"\u003eTitle\u003c/th\u003e\n          \u003cth class=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\"\u003eContent\u003c/th\u003e\n          \u003cth class=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\", colspan=\"3\"\u003e\u003c/th\u003e\n        \u003c/tr\u003e\n      \u003c/thead\u003e\n      \u003ctbody\u003e\n        \u003c%% @posts.each do |post| %\u003e\n          \u003ctr\u003e\n            \u003ctd class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\"\u003e\u003c%= post.title %\u003e\u003c/td\u003e\n            \u003ctd class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\"\u003e\u003c%= post.content %\u003e\u003c/td\u003e\n            \u003ctd class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\"\u003e\u003c%= link_to 'Show', post %\u003e\u003c/td\u003e\n            \u003ctd class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\"\u003e\u003c%= link_to 'Edit', edit_post_path(post) %\u003e\u003c/td\u003e\n            \u003ctd class=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\"\u003e\u003c%= link_to 'Destroy', post, method: :delete, data: { confirm: 'Are you sure?' } %\u003e\u003c/td\u003e\n          \u003c/tr\u003e\n        \u003c% end %\u003e\n      \u003c/tbody\u003e\n    \u003c/table\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003c%= link_to 'New Post', new_post_path %\u003e\n```\n\nYou should now see the following page when you navigate to `localhost:3000`\n\n![updated tailwind home index](https://i.imgur.com/aiOlHht.jpg)\n\n## Abstraction\n\nThis table looks so much better, but the classes for these elements are long and repetitive. Let's clean that up a bit by abstracting them to our scss file.\n\nCreate two new classes in `app/javascript/src/application.scss`:\n\n```scss\n.table-header {\n  @apply px-6 bg-gray-100 text-gray-900 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left;\n}\n\n.table-content {\n  @apply border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left;\n}\n```\n\nThen in our HTML, change all of the table head and body element classes accordingly. We also darkened the header text to make the change standout.\n\nWhen you reload the page, you should see the same screen as before, only with darker table headings.\n\n## Summary\n\nHopefully this is helpful to those of you looking to add TailwindCSS to your Rails app.\n\nIf you are interested in more information about this article of using Rails and TailwindCSS, leave a comment or reach out to me on Twitter and I am happy to chat.\n\n[View repo for this post](https://github.com/andrewmcodes/tailwind_css_1_1_4_rails_demo)\n\nHappy coding! 😄\n",
    "positive_reactions_count": 68,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--rdvNpiaz--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/i1zkcgdupe41vbluwd1d.jpg",
    "tag_list": ["ruby", "rails", "tutorial", "beginners"],
    "canonical_url": "https://dev.to/andrewmcodes/ruby-on-rails-and-tailwindcss-1-1-4-mm5",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 248567,
    "title": "How do you organize development projects on your computer?",
    "description": "I have tried different methods to keep development projects on my computer organized but between work...",
    "published": true,
    "published_at": "2020-01-25T21:10:50.901Z",
    "slug": "how-do-you-organize-development-projects-on-your-computer-4dja",
    "path": "/andrewmcodes/how-do-you-organize-development-projects-on-your-computer-4dja",
    "url": "https://dev.to/andrewmcodes/how-do-you-organize-development-projects-on-your-computer-4dja",
    "comments_count": 45,
    "public_reactions_count": 55,
    "page_views_count": 2078,
    "published_timestamp": "2020-01-25T21:10:50Z",
    "body_markdown": "I have tried different methods to keep development projects on my computer organized but between work projects, open source, side projects, issue reproductions, demos, and little test projects, it gets tough. I did a quick peruse through my computer and counted over 100 repos (some on GitHub, some not). They are all over the place, and I have only had this computer for 3 months! 😱",
    "positive_reactions_count": 55,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iV5ieizF--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/r6bbjjt5um9qufzqjs27.jpg",
    "tag_list": ["discuss", "productivity"],
    "canonical_url": "https://dev.to/andrewmcodes/how-do-you-organize-development-projects-on-your-computer-4dja",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    },
    "flare_tag": { "name": "discuss", "bg_color_hex": "#000000", "text_color_hex": "#FFFFFF" }
  },
  {
    "type_of": "article",
    "id": 239887,
    "title": "CI for Ruby on Rails: GitHub Actions vs. CircleCI",
    "description": "CI for Ruby on Rails: GitHub Actions vs. CircleCI   This is part of a three part series wher...",
    "published": true,
    "published_at": "2020-01-17T20:34:45.158Z",
    "slug": "ci-for-ruby-on-rails-github-actions-vs-circleci-524p",
    "path": "/codefund/ci-for-ruby-on-rails-github-actions-vs-circleci-524p",
    "url": "https://dev.to/codefund/ci-for-ruby-on-rails-github-actions-vs-circleci-524p",
    "comments_count": 0,
    "public_reactions_count": 10,
    "page_views_count": 392,
    "published_timestamp": "2020-01-17T20:34:45Z",
    "body_markdown": "# CI for Ruby on Rails: GitHub Actions vs. CircleCI\n\n_This is part of a three part series where I will walk you through setting up your CI suite with GitHub Actions, CircleCI, and then comparing which you may want to use if you are setting up continuous integration for your Rails app._\n\n## Part 3: Comparison\n\nYou can find the conclusion of this series on the [CodeFund Blog](https://codefund.io/blog/ci-for-ruby-on-rails-github-actions-vs-circleci).\n\nThanks for following along!",
    "positive_reactions_count": 10,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--G0UrFxtT--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/ti15fr6cnpezini4fet2.jpg",
    "tag_list": ["rails", "ruby", "circleci", "github"],
    "canonical_url": "https://dev.to/codefund/ci-for-ruby-on-rails-github-actions-vs-circleci-524p",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    },
    "organization": {
      "name": "CodeFund",
      "username": "codefund",
      "slug": "codefund",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--GCFx7VZr--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/1615/90d98caf-5a7c-4359-a093-3a8e950c7c7a.png",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--W84yQm1f--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/1615/90d98caf-5a7c-4359-a093-3a8e950c7c7a.png"
    }
  },
  {
    "type_of": "article",
    "id": 239885,
    "title": "CI for Ruby on Rails: CircleCI",
    "description": "CI for Ruby on Rails: GitHub Actions vs. CircleCI   This is part of a three part series wher...",
    "published": true,
    "published_at": "2020-01-17T19:50:24.862Z",
    "slug": "ci-for-ruby-on-rails-circleci-4lkn",
    "path": "/codefund/ci-for-ruby-on-rails-circleci-4lkn",
    "url": "https://dev.to/codefund/ci-for-ruby-on-rails-circleci-4lkn",
    "comments_count": 0,
    "public_reactions_count": 15,
    "page_views_count": 856,
    "published_timestamp": "2020-01-17T19:50:24Z",
    "body_markdown": "# CI for Ruby on Rails: GitHub Actions vs. CircleCI\n\n_This is part of a three part series where I will walk you through setting up your CI suite with GitHub Actions, CircleCI, and then comparing which you may want to use if you are setting up continuous integration for your Rails app._\n\n## Part 2: CircleCI\n\n### 1. Set the CircleCI version\n\n```yml\nversion: 2.1\n```\n\n### 2. Create your job(s), and choose a docker image to use.\n\nCircleCI offers a lot of images for us to get started [here](https://hub.docker.com/r/circleci/ruby/tags/). Alternatively, you can use their [dockerfile-wizard](https://github.com/CircleCI-Public/dockerfile-wizard) to create your own custom image.\n\n```yml\njobs:\n  build:\n    docker:\n      - image: circleci/ruby:2.6.5-node-browsers\n        environment:\n          PG_HOST: localhost\n          PG_USERNAME: ubuntu\n          RAILS_ENV: test\n          RACK_ENV: test\n          DEFAULT_HOST: codefund.io\n          PARALLEL_WORKERS: \"1\"\n          REDIS_CACHE_URL: redis://127.0.0.1:6379\n          REDIS_QUEUE_URL: redis://127.0.0.1:6379\n          WORDPRESS_URL: 'https://codefund.io'\n```\n\nThis tells our job that we want to run the commands we will define later inside of a container built with the `circleci/ruby:2.6.5-node-browsers` image, and we want the environment variables listed to be inside of that container.\n\n### 3. Define services\n\nFor a typical Rails app, you are probably using Redis for caching or tools like Sidekiq, and you also probably have a database. Defining services in your config allows us to use additional containers to run these types of tools. We use Redis in the app, but it is not needed for running the tests.\n\n```yaml\njobs:\n  build:\n    docker:\n      - image: circleci/ruby:2.6.5-node-browsers\n        environment:\n          PG_HOST: localhost\n          PG_USERNAME: ubuntu\n          RAILS_ENV: test\n          RACK_ENV: test\n          DEFAULT_HOST: codefund.io\n          PARALLEL_WORKERS: \"1\"\n          REDIS_CACHE_URL: redis://127.0.0.1:6379\n          REDIS_QUEUE_URL: redis://127.0.0.1:6379\n          WORDPRESS_URL: 'https://codefund.io'\n      - image: circleci/postgres:11.2\n        environment:\n          POSTGRES_USER: ubuntu\n          POSTGRES_DB: code_fund_ads_test\n```\n\n### 4. Now we have defined our build step, we need to set our working directory.\n\n```yaml\nworking_directory: ~/repo\n```\n\n### 5. Add steps\n\nNow it is time to run commands inside of our container. We will start by checking out the code.\n\n```yml\nsteps:\n  - checkout\n```\n\n### 6. Add dependencies\n\nWe may need to add some additional dependencies in our container. You can do so by using `run` and tools like APT or curl.\n\n```yaml\n- run: |\n    sudo apt-get update\n    sudo apt-get install -y postgresql-client\n    curl -o- -L https://yarnpkg.com/install.sh | bash\n```\n\n### 7. Caching\n\nThankfully, CircleCI provides some good documentation for getting started with your tools of choice for caching dependencies. I recommend checking that out, which also has some examples.\n\n[Cache Documentation](https://circleci.com/docs/2.0/caching/)\n\nThe first step is to restore the cache from previous builds if it exists.\n\n```yml\n- restore_cache:\n    name: Restore gem cache\n    keys:\n      - gem-cache-v4-{{ arch }}-{{ .Branch }}-{{ checksum \"Gemfile.lock\" }}\n      - gem-cache-v4-{{ arch }}-{{ .Branch }}\n      - gem-cache-v4-{{ arch }}\n      - gem-cache-v4\n- restore_cache:\n    name: Restore yarn cache\n    keys:\n      - yarn-cache-v4-{{ arch }}-{{ .Branch }}-{{ checksum \"yarn.lock\" }}\n      - yarn-cache-v4-{{ arch }}-{{ .Branch }}\n      - yarn-cache-v4-{{ arch }}\n      - yarn-cache-v4\n- run:\n    name: Set up assets cache key\n    command: find app/javascript -type f -exec md5sum {} \\; \u003e dependency_checksum\n- restore_cache:\n    name: Restore assets cache\n    keys:\n      - assets-cache-v4-{{ arch }}-{{ .Branch }}-{{ checksum \"dependency_checksum\" }}\n      - assets-cache-v4-{{ arch }}-{{ .Branch }}\n      - assets-cache-v4-{{ arch }}\n      - assets-cache-v4\n```\n\n### 8. Bundle, Yarn, and Precompile Assets\n\nNext, we will want to run Bundler and Yarn to install our dependencies if they were not restored from the cache, and precompile our assets.\n\n```yml\n- run:\n    name: Install gem dependencies\n    command: |\n      gem install bundler:2.1.1\n      bundle check || bundle install --jobs=6 --retry=3 --path vendor/bundle\n- run:\n    name: Install yarn dependencies\n    command: yarn install --ignore-engines --frozen-lockfile\n- run:\n    name: Precompile assets\n    command: RAILS_ENV=test bundle exec rails webpacker:compile\n```\n\nNOTE: You may be able to skip the asset compilation, that is up to you.\n\n### 9. Caching our dependencies\n\nOnce we have installed our dependencies, we can save the cache.\n\n```yaml\n- save_cache:\n    name: Save gem cache\n    paths:\n      - vendor/bundle\n    key: gem-cache-v4-{{ arch }}-{{ .Branch }}-{{ checksum \"Gemfile.lock\" }}\n- save_cache:\n    name: Save yarn cache\n    paths:\n      - ~/.cache/yarn\n    key: yarn-cache-v4-{{ arch }}-{{ .Branch }}-{{ checksum \"yarn.lock\" }}\n- save_cache:\n    name: Save assets cache\n    paths:\n      - public/packs-test\n      - tmp/cache/webpacker\n    key: assets-cache-v4-{{ arch }}-{{ .Branch }}-{{ checksum \"dependency_checksum\" }}\n```\n\n### 10. Setup Database\n\nOne last item we need to take care of prior to running the tests and linters is setting up our database.\n\n```yaml\n- run:\n    name: Set up DB\n    command: bundle exec rails db:drop db:create db:structure:load --trace\n```\n\n### 11. Run Tests\n\nNow we can finally run our tests. The first thing we do is run a Zeitwerk check. If this fails, we will want to fail the build. We have added this step due to a bug slipping out that we didn't catch and have found it useful. Next we will run our tests, and save any artifacts from that. We use the [minitest-reporters](https://github.com/kern/minitest-reporters) gem, which will save screenshots of failing system tests, which we will want to see if the build fails. The reason we have `set +e` in there is so that the store artifacts step will run if the system tests fail.\n\n```yaml\n- run:\n    name: Run zeitwerk check\n    command: bundle exec rails zeitwerk:check\n- run:\n    name: Run tests\n    command: |\n      bundle exec rails test\n      set +e\n      bundle exec rails test:system\n- store_artifacts:\n    path: tmp/screenshots\n    destination: screenshots\n```\n\n### 12. Run Linters\n\nThe last step is to run any linters or other checks you want.\n\n```yaml\n- run:\n    name: Run standardrb check\n    command: bundle exec standardrb --format progress\n- run:\n    name: Run ERB lint check\n    command: bundle exec erblint app/views/**/*.html.erb\n- run:\n    name: Run prettier-standard check\n    command: yarn run --ignore-engines prettier-standard --check \"app/**/*.js\"\n```\n\nNow our config is complete and should look like:\n\n```yaml\nversion: 2.1\njobs:\n  build:\n    docker:\n      - image: circleci/ruby:2.6.5-node-browsers\n        environment:\n          CAMPAIGN_DEMO_ID: \"395\"\n          PG_HOST: localhost\n          PG_USERNAME: ubuntu\n          RAILS_ENV: test\n          RACK_ENV: test\n          DEFAULT_HOST: codefund.io\n          PARALLEL_WORKERS: \"1\"\n          REDIS_CACHE_URL: redis://127.0.0.1:6379\n          REDIS_QUEUE_URL: redis://127.0.0.1:6379\n          WORDPRESS_URL: 'https://codefund.io'\n      - image: circleci/postgres:11.2\n        environment:\n          POSTGRES_USER: ubuntu\n          POSTGRES_DB: code_fund_ads_test\n    working_directory: ~/repo\n    steps:\n      - checkout\n      - run: |\n          sudo apt-get update\n          sudo apt-get install -y postgresql-client\n          curl -o- -L https://yarnpkg.com/install.sh | bash\n      - restore_cache:\n          name: Restore gem cache\n          keys:\n            - gem-cache-v4-{{ arch }}-{{ .Branch }}-{{ checksum \"Gemfile.lock\" }}\n            - gem-cache-v4-{{ arch }}-{{ .Branch }}\n            - gem-cache-v4-{{ arch }}\n            - gem-cache-v4\n      - restore_cache:\n          name: Restore yarn cache\n          keys:\n            - yarn-cache-v4-{{ arch }}-{{ .Branch }}-{{ checksum \"yarn.lock\" }}\n            - yarn-cache-v4-{{ arch }}-{{ .Branch }}\n            - yarn-cache-v4-{{ arch }}\n            - yarn-cache-v4\n      - run:\n          name: Set up assets cache key\n          command: find app/javascript -type f -exec md5sum {} \\; \u003e dependency_checksum\n      - restore_cache:\n          name: Restore assets cache\n          keys:\n            - assets-cache-v4-{{ arch }}-{{ .Branch }}-{{ checksum \"dependency_checksum\" }}\n            - assets-cache-v4-{{ arch }}-{{ .Branch }}\n            - assets-cache-v4-{{ arch }}\n            - assets-cache-v4\n      - run:\n          name: Install gem dependencies\n          command: |\n            gem install bundler:2.1.1\n            bundle check || bundle install --jobs=6 --retry=3 --path vendor/bundle\n      - run:\n          name: Install yarn dependencies\n          command: yarn install --ignore-engines --frozen-lockfile\n      - run:\n          name: Precompile assets\n          command: RAILS_ENV=test bundle exec rails webpacker:compile\n      - save_cache:\n          name: Save gem cache\n          paths:\n            - vendor/bundle\n          key: gem-cache-v4-{{ arch }}-{{ .Branch }}-{{ checksum \"Gemfile.lock\" }}\n      - save_cache:\n          name: Save yarn cache\n          paths:\n            - ~/.cache/yarn\n          key: yarn-cache-v4-{{ arch }}-{{ .Branch }}-{{ checksum \"yarn.lock\" }}\n      - save_cache:\n          name: Save assets cache\n          paths:\n            - public/packs-test\n            - tmp/cache/webpacker\n          key: assets-cache-v4-{{ arch }}-{{ .Branch }}-{{ checksum \"dependency_checksum\" }}\n      - run:\n          name: Set up DB\n          command: bundle exec rails db:drop db:create db:structure:load --trace\n      - run:\n          name: Run zeitwerk check\n          command: bundle exec rails zeitwerk:check\n      - run:\n          name: Run tests\n          command: |\n            bundle exec rails test\n            set +e\n            bundle exec rails test:system\n      - store_artifacts:\n          path: tmp/screenshots\n          destination: screenshots\n      - run:\n          name: Run standardrb check\n          command: bundle exec standardrb --format progress\n      - run:\n          name: Run ERB lint check\n          command: bundle exec erblint app/views/**/*.html.erb\n      - run:\n          name: Run prettier-standard check\n          command: yarn run --ignore-engines prettier-standard --check \"app/**/*.js\"\n```\n\nThis is the configuration that we currently use for CodeFund, which you can find [here](https://github.com/gitcoinco/code_fund_ads/blob/master/.circleci/config.yml).\n\nWhile this setup will work great, there are some enhancements we can add like parallelism, which we will explore in a future post.\n\n_Special thanks to the team at CircleCI for their feedback on this post._\n",
    "positive_reactions_count": 15,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--bmKbiFc4--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/b4knmzfjstqjy1ph89dk.jpg",
    "tag_list": ["ruby", "rails", "tutorial", "circleci"],
    "canonical_url": "https://dev.to/codefund/ci-for-ruby-on-rails-circleci-4lkn",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    },
    "organization": {
      "name": "CodeFund",
      "username": "codefund",
      "slug": "codefund",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--GCFx7VZr--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/1615/90d98caf-5a7c-4359-a093-3a8e950c7c7a.png",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--W84yQm1f--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/1615/90d98caf-5a7c-4359-a093-3a8e950c7c7a.png"
    }
  },
  {
    "type_of": "article",
    "id": 239161,
    "title": "Ruby on Rails Development with VS Code",
    "description": "I tried several editors when I first got into programming, but VS Code quickly stuck. For the past th...",
    "published": true,
    "published_at": "2020-01-16T04:38:37.842Z",
    "slug": "ruby-on-rails-development-with-vs-code-p1i",
    "path": "/andrewmcodes/ruby-on-rails-development-with-vs-code-p1i",
    "url": "https://dev.to/andrewmcodes/ruby-on-rails-development-with-vs-code-p1i",
    "comments_count": 4,
    "public_reactions_count": 106,
    "page_views_count": 8700,
    "published_timestamp": "2020-01-16T04:38:37Z",
    "body_markdown": "I tried several editors when I first got into programming, but VS Code quickly stuck. For the past three years, I have been continually updating my VS Code settings, extensions, keybindings, and snippets to help me be as productive as my diehard VIM friends. \n\nHere is a quick article showing my setup for working with Rails that I use when I work on [CodeFund](https://codefund.io) and my Rails side projects.\n\n# Extensions\n\nThese are the ones I think are the most important. For a full list, check out [this gist](https://gist.github.com/andrewmcodes/8a173595a3dae44c3d6d39e977899eed).\n\n## Theme\n\n- [One Dark Pro](https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme)\n\n## Icons\n\n- [VSCode Great Icons](https://marketplace.visualstudio.com/items?itemName=emmanuelbeziat.vscode-great-icons)\n\n## General\n\n- [Auto Close Tag](https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag)\n- [Auto Rename Tag](https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag)\n- [Bookmarks](https://marketplace.visualstudio.com/items?itemName=alefragnani.Bookmarks)\n- [Bracket Pair Colorizer](https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer)\n- [change-case](https://marketplace.visualstudio.com/items?itemName=wmaurer.change-case)\n- [Code Runner](https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner)\n- [Dash](https://marketplace.visualstudio.com/items?itemName=deerawan.vscode-dash)\n- [Docker](https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker)\n- [Duplicate action](https://marketplace.visualstudio.com/items?itemName=mrmlnc.vscode-duplicate)\n- [Font Awesome Auto-complete \u0026 Preview](https://marketplace.visualstudio.com/items?itemName=Janne252.fontawesome-autocomplete)\n- [Git Extension Pack](https://marketplace.visualstudio.com/items?itemName=donjayamanne.git-extension-pack)\n- [Git History](https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory)\n- [GitHub Pull Requests](https://marketplace.visualstudio.com/items?itemName=GitHub.vscode-pull-request-github)\n- [gitignore](https://marketplace.visualstudio.com/items?itemName=codezombiech.gitignore)\n- [GitLens](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens)\n- [Markdown All in One](https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one)\n- [Mustache](https://marketplace.visualstudio.com/items?itemName=dawhite.mustache)\n- [Open in GitHub, Bitbucket, Gitlab, VisualStudio.com !](https://marketplace.visualstudio.com/items?itemName=ziyasal.vscode-open-in-github)\n- [Peacock](https://marketplace.visualstudio.com/items?itemName=johnpapa.vscode-peacock)\n- [Prettier](https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode)\n- [Prettier-Standard](https://marketplace.visualstudio.com/items?itemName=numso.prettier-standard-vscode)\n- [Project Manager](https://marketplace.visualstudio.com/items?itemName=alefragnani.project-manager)\n- [Quick and Simple Text Selection](https://marketplace.visualstudio.com/items?itemName=dbankier.vscode-quick-select)\n- [Sass Lint](https://marketplace.visualstudio.com/items?itemName=glen-84.sass-lint)\n- [Settings Sync](https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync)\n- [SVG Viewer](https://marketplace.visualstudio.com/items?itemName=cssho.vscode-svgviewer)\n- [YAML](https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml)\n\n## Ruby \u0026 Rails\n\n- [endwise*](https://marketplace.visualstudio.com/items?itemName=kaiwood.endwise)\n- [ERB Formatter/Beautify](https://marketplace.visualstudio.com/items?itemName=aliariff.vscode-erb-beautify)\n- [Gem Lens](https://marketplace.visualstudio.com/items?itemName=ninoseki.vscode-gem-lens)\n- [Rails Fast Nav*](https://marketplace.visualstudio.com/items?itemName=jemmyw.rails-fast-nav)\n- [Rails Flip-Flop*](https://marketplace.visualstudio.com/items?itemName=bweave.rails-flip-flop)\n- [Rails Routes](https://marketplace.visualstudio.com/items?itemName=aki77.rails-routes)\n- [rails-latest-migration*](https://marketplace.visualstudio.com/items?itemName=tmikoss.rails-latest-migration)\n- [Rails](https://marketplace.visualstudio.com/items?itemName=bung87.rails)\n- [Ruby Haml](https://marketplace.visualstudio.com/items?itemName=vayan.haml)\n- [Ruby Solargraph*](https://marketplace.visualstudio.com/items?itemName=castwide.solargraph)\n- [Ruby*](https://marketplace.visualstudio.com/items?itemName=rebornix.Ruby)\n- [Simple Ruby ERB](https://marketplace.visualstudio.com/items?itemName=vortizhe.simple-ruby-erb)\n- [VSCode Ruby*](https://marketplace.visualstudio.com/items?itemName=wingrunr21.vscode-ruby)\n- [vscode-gemfile](https://marketplace.visualstudio.com/items?itemName=bung87.vscode-gemfile)\n- [YARD Documenter](https://marketplace.visualstudio.com/items?itemName=pavlitsky.yard)\n\n_* must have!_\n\n# Settings\n\nThese are my global settings. For a lot of projects, I will override these settings with a workspace settings file which works great. \n\n```json\n{\n    // TELEMETRY\n    // Enable usage data and errors to be sent to a Microsoft online service.\n    \"telemetry.enableTelemetry\": false,\n\n    // WINDOW\n    // Adjust the zoom level of the window.\n    \"window.zoomLevel\": 0,\n\n    // BREADCRUMBS\n    // Enable/disable navigation breadcrumbs.\n    \"breadcrumbs.enabled\": true,\n\n    // EXPLORER\n    // Controls whether the explorer should ask for confirmation to move files and folders via drag and drop.\n    \"explorer.confirmDragAndDrop\": false,\n    // Controls whether a top border is drawn on modified (dirty) editor tabs or not.\n    \"workbench.editor.highlightModifiedTabs\": true,\n    // Controls the location of the sidebar. It can either show on the left or right of the workbench.\n    \"workbench.sideBar.location\": \"right\",\n    // Controls which editor is shown at startup, if none are restored from the previous session.\n    \"workbench.startupEditor\": \"newUntitledFile\",\n    // Specifies the icon theme used in the workbench or 'null' to not show any file icons.\n    \"workbench.iconTheme\": \"vscode-great-icons\",\n    // Specifies the color theme used in the workbench.\n    \"workbench.colorTheme\": \"One Dark Pro\",\n    // Overrides colors from the currently selected color theme.\n    \"workbench.colorCustomizations\": {\n      \"editor.background\": \"#1a1c20\",\n      \"editorIndentGuide.activeBackground\": \"#b83957\",\n      \"tab.activeBorderTop\": \"#64676E\"\n    },\n\n    // EDITOR\n    // Controls whether the editor should run in a mode where it is optimized for screen readers.\n    \"editor.accessibilitySupport\": \"off\",\n    // Controls the font family.\n    \"editor.fontFamily\": \"Fira Code\",\n    // Enables/Disables font ligatures.\n    \"editor.fontLigatures\": true,\n    // Controls the font size in pixels.\n    \"editor.fontSize\": 14,\n    // Controls the line height. Use 0 to compute the line height from the font size.\n    \"editor.lineHeight\": 20,\n    // Controls the letter spacing in pixels.\n    \"editor.letterSpacing\": 0.2,\n    // Controls the font weight.\n    \"editor.fontWeight\": \"400\",\n    // The number of spaces a tab is equal to.\n    \"editor.tabSize\": 2,\n    // Controls how the editor should render whitespace characters.\n    \"editor.renderWhitespace\": \"all\",\n    // Controls the cursor style.\n    \"editor.cursorStyle\": \"line\",\n    // Controls the width of the cursor when #editor.cursorStyle# is set to line.\n    \"editor.cursorWidth\": 5,\n    // Control the cursor animation style.\n    \"editor.cursorBlinking\": \"solid\",\n    // Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers.\n    \"editor.rulers\": [\n      120\n    ],\n    // Controls whether the minimap is shown.\n    \"editor.minimap.enabled\": false,\n    // Format a file on save.\n    \"editor.formatOnSave\": false,\n    // Timeout in milliseconds after which the formatting that is run on file save is cancelled.\n    \"editor.formatOnSaveTimeout\": 1500,\n    // Controls whether the editor should automatically format the pasted content.\n    \"editor.formatOnPaste\": true,\n    // Controls whether the editor should automatically format the line after typing.\n    \"editor.formatOnType\": false,\n    // Controls whether the editor should automatically adjust the indentation when users type, paste or move lines.\n    \"editor.autoIndent\": \"keep\",\n\n    // TERMINAL\n    // Customizes which terminal application to run on macOS.\n    \"terminal.external.osxExec\": \"Archipelago.app\",\n    // The path of the shell that the terminal uses on macOS\n    \"terminal.integrated.shell.osx\": \"/bin/zsh\",\n    // Controls the font size in pixels of the terminal.\n    \"terminal.integrated.fontSize\": 14,\n\n    // FILES\n    // When enabled, will trim trailing whitespace when saving a file.\n    \"files.trimTrailingWhitespace\": true,\n    // When enabled, insert a final new line at the end of the file when saving it.\n    \"files.insertFinalNewline\": true,\n    // When enabled, will trim all new lines after the final new line at the end of the file when saving it.\n    \"files.trimFinalNewlines\": true,\n    // Controls auto save of dirty files.\n    \"files.autoSave\": \"onFocusChange\",\n    // Configure file associations to languages (e.g. \"*.extension\": \"html\"). These have precedence over the default associations of the languages installed.\n    \"files.associations\": {\n      \"*.erb\": \"erb\",\n      \"Gemfile\": \"ruby\"\n    },\n\n    // EMMET\n    // Enable Emmet abbreviations in languages that are not supported by default.\n    \"emmet.includeLanguages\": {\n      \"html\": \"html\",\n      \"html.erb\": \"html\",\n      \"html.inky\": \"html\",\n      \"erb\": \"html\"\n    },\n\n    // LANG: Javascript\n    // Enable/disable automatic updating of import paths when you rename or move a file in VS Code.\n    \"javascript.updateImportsOnFileMove.enabled\": \"always\",\n    \"npm.packageManager\": \"yarn\",\n\n    // PLUGIN: Ruby\n    // Use built-in language server\n    \"ruby.useLanguageServer\": true,\n    // Time (ms) to wait after keypress before running enabled linters.\n    \"ruby.lintDebounceTime\": 1500,\n    //run non-lint commands with bundle exec\n    \"ruby.useBundler\": true,\n    // Set individual ruby linters to use\n    \"ruby.lint\": {\n      // enable standard via bundler\n      \"standard\": {\n        // Prefix the `standard` command with `bundle exec`\n        \"useBundler\": true\n      }\n    },\n    // Which system to use for formatting. Use `false` to disable or if another extension provides this feature.\n    \"ruby.format\": \"standard\",\n\n    // GIT\n    // When enabled, commits will automatically be fetched from the default remote of the current Git repository.\n    \"git.autofetch\": true,\n    // Commit all changes when there are no staged changes.\n    \"git.enableSmartCommit\": true,\n    // Enables commit signing with GPG.\n    \"git.enableCommitSigning\": true,\n    // Ignores the warning when there are too many changes in a repository.\n    \"git.ignoreLimitWarning\": true,\n\n    // PLUGIN: Gitlens\n    // Specifies where to show the Repositories view\n    \"gitlens.views.repositories.location\": \"gitlens\",\n    // Specifies where to show the File History view\n    \"gitlens.views.fileHistory.location\": \"gitlens\",\n    // Specifies where to show the Line History view\n    \"gitlens.views.lineHistory.location\": \"gitlens\",\n    // Specifies where to show the Compare view\n    \"gitlens.views.compare.location\": \"gitlens\",\n    // Specifies where to show the Search Commits view\n    \"gitlens.views.search.location\": \"gitlens\",\n    // Specifies whether to provide an authors code lens, showing number of authors of the file or code block and the most prominent author (if there is more than one)\n    \"gitlens.codeLens.authors.enabled\": false,\n    // Specifies whether to provide a recent change code lens, showing the author and date of the most recent commit for the file or code block\n    \"gitlens.codeLens.recentChange.enabled\": false,\n    // Specifies whether to provide any Git code lens, by default.\n    \"gitlens.codeLens.enabled\": false,\n\n    // PLUGIN: Settings Sync\n    // Controls whether opened editors should show in tabs or not.\n    \"sync.gist\": \"YOUR_TOKEN\",\n\n    // PLUGIN: Font Awesome Auto-complete\n    \"fontAwesomeAutocomplete.patterns\": [\n      \"**/*.html\",\n      \"**/*.html.erb\"\n    ],\n\n    // PLUGIN: Peacock\n    // Colors for Peacock extension\n    \"peacock.favoriteColors\": [\n      {\n        \"name\": \"Angular Red\",\n        \"value\": \"#b52e31\"\n      },\n      {\n        \"name\": \"Auth0 Orange\",\n        \"value\": \"#eb5424\"\n      },\n      {\n        \"name\": \"Azure Blue\",\n        \"value\": \"#007fff\"\n      },\n      {\n        \"name\": \"C# Purple\",\n        \"value\": \"#68217A\"\n      },\n      {\n        \"name\": \"Gatsby Purple\",\n        \"value\": \"#639\"\n      },\n      {\n        \"name\": \"Go Cyan\",\n        \"value\": \"#5dc9e2\"\n      },\n      {\n        \"name\": \"Java Blue-Gray\",\n        \"value\": \"#557c9b\"\n      },\n      {\n        \"name\": \"JavaScript Yellow\",\n        \"value\": \"#f9e64f\"\n      },\n      {\n        \"name\": \"Mandalorian Blue\",\n        \"value\": \"#1857a4\"\n      },\n      {\n        \"name\": \"Node Green\",\n        \"value\": \"#215732\"\n      },\n      {\n        \"name\": \"React Blue\",\n        \"value\": \"#00b3e6\"\n      },\n      {\n        \"name\": \"Something Different\",\n        \"value\": \"#832561\"\n      },\n      {\n        \"name\": \"Vue Green\",\n        \"value\": \"#42b883\"\n      }\n    ],\n\n    // Language specific formatting settings\n    \"[jsonc]\": {\n      \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"[html]\": {\n      \"editor.defaultFormatter\": \"vscode.html-language-features\"\n    },\n    \"[markdown]\": {\n      \"editor.defaultFormatter\": \"yzhang.markdown-all-in-one\"\n    },\n    \"[yaml]\": {\n      \"editor.defaultFormatter\": \"redhat.vscode-yaml\"\n    },\n    \"[json]\": {\n      \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"[typescript]\": {\n      \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"[javascript]\": {\n      \"editor.defaultFormatter\": \"numso.prettier-standard-vscode\"\n    },\n    \"[ruby]\": {\n      \"editor.formatOnSave\": true\n    },\n    \"[scss]\": {\n      \"editor.formatOnSave\": true\n    }\n  }\n```\n\n# Keybindings\n\n```json\n[\n  {\n    \"key\": \"shift+alt+e\",\n    \"command\": \"erb.toggleTags\",\n    \"when\": \"editorTextFocus\"\n  },\n  {\n    \"key\": \"alt+f\",\n    \"command\": \"extension.railsFlipFlop\"\n  }\n]\n```\n\n# Snippets\n\nCheckout [hopsoft/model_probe](https://github.com/hopsoft/model_probe) if you are curious about the first snippet!\n\n```json\n{\n  \"model comments\": {\n    \"prefix\": \"rmc\",\n    \"body\": [\n      \"  # extends ...................................................................\",\n      \"\",\n      \"  # includes ..................................................................\",\n      \"\",\n      \"  # relationships .............................................................\",\n      \"\",\n      \"  # validations ...............................................................\",\n      \"\",\n      \"  # callbacks .................................................................\",\n      \"\",\n      \"  # scopes ....................................................................\",\n      \"\",\n      \"  # additional config (i.e. accepts_nested_attribute_for etc...) ..............\",\n      \"\",\n      \"  # class methods .............................................................\",\n      \"\",\n      \"  # public instance methods ...................................................\",\n      \"\",\n      \"  # protected instance methods ................................................\",\n      \"\",\n      \"  # private instance methods ..................................................\",\n      \"\"\n    ],\n    \"description\": \"model comments\"\n  },\n  \"Add pry binding\": {\n    \"prefix\": \"bp\",\n    \"body\": [\n      \"binding.pry\"\n    ],\n    \"description\": \"Add pry binding\"\n  },\n  \"Add erb pry binding\": {\n    \"prefix\": \"ebp\",\n    \"body\": [\n      \"\u003c% binding.pry %\u003e\"\n    ],\n    \"description\": \"Add erb pry binding\"\n  }\n}\n```\n\nHopefully you can take something from my setup to add to yours!\n\nHappy coding!",
    "positive_reactions_count": 106,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iDSa_uSZ--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/oz1ryybc49yjadzqijwy.png",
    "tag_list": ["vscode", "ruby", "rails", "archived"],
    "canonical_url": "https://dev.to/andrewmcodes/ruby-on-rails-development-with-vs-code-p1i",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  },
  {
    "type_of": "article",
    "id": 238012,
    "title": "CI for Ruby on Rails: GitHub Actions",
    "description": "CI for Ruby on Rails: GitHub Actions vs. CircleCI   This is part of a three part series wher...",
    "published": true,
    "published_at": "2020-01-14T16:58:44.100Z",
    "slug": "ci-for-ruby-on-rails-github-actions-3mn1",
    "path": "/codefund/ci-for-ruby-on-rails-github-actions-3mn1",
    "url": "https://dev.to/codefund/ci-for-ruby-on-rails-github-actions-3mn1",
    "comments_count": 2,
    "public_reactions_count": 67,
    "page_views_count": 1731,
    "published_timestamp": "2020-01-14T16:58:44Z",
    "body_markdown": "# CI for Ruby on Rails: GitHub Actions vs. CircleCI\n\n_This is part of a three part series where I will walk you through setting up your CI suite with GitHub Actions, CircleCI, and then comparing which you may want to use if you are setting up continuous integration for your Rails app._\n\n## Part 1: GitHub Actions\n\n### 1. Set the name for your action\n\n```yml\nname: Run Tests \u0026 Linters\n```\n\n### 2. Set what events should trigger the action to run\n\n```yml\nname: Run Tests \u0026 Linters\n\non:\n  pull_request:\n    branches:\n      - '*'\n  push:\n    branches:\n      - master\n```\n\nWhat this says is that this action will run anytime a pull_request is updated on any branch, and also on pushes to master.\n\n### 3. Create your job, and choose what to run the action on\n\n```yml\njobs:\n  build:\n    runs-on: ubuntu-latest\n```\n\nThis tells our action we want to run the action on Ubuntu, and use the latest version GitHub has available, which is Ubuntu 18.04.\n\n### 4. Define services\n\nFor a typical Rails app, you are probably using Redis for caching a tools like Sidekiq, and you also probably have a database. Defining services in your action allows us to use additional containers to run these types of tools.\n\n```yaml\nservices:\n  postgres: # The name of the service\n    image: postgres:11 # A docker image\n    env: # Environment variables you want to use inside the service\n      POSTGRES_USER: postgres\n      POSTGRES_PASSWORD: postgres\n      POSTGRES_DB: postgres\n    ports: ['5432:5432'] # The port that you can access the service on\n    options: \u003e- # Options for the service, in this case we want to make sure that the Postgres container passes a health check\n      --health-cmd pg_isready\n      --health-interval 10s\n      --health-timeout 5s\n      --health-retries 5\n  redis: # The name of the service\n    image: redis # A docker image\n    ports: ['6379:6379'] # The ports that you can access the service on\n    options: --entrypoint redis-server # Options for the service\n```\n\n### 5. Setup dependencies and checkout the branch\n\nHere is where it got tricky for me. If you search for using GitHub actions with Rails, you will probably see something like this:\n\n```yml\n- uses: actions/checkout@v1\n- name: Setup Ruby\n  uses: actions/setup-ruby@v1\n  with:\n    ruby-version: 2.6.x\n- uses: borales/actions-yarn@v2.0.0\n  with:\n    cmd: install\n```\n\nThis particular example is from my friend [Chris Oliver](https://gorails.com/episodes/github-actions-continuous-integration-ruby-on-rails), who runs [Go Rails](https://gorails.com) (check it out!!).\n\nThis solution would have been great except:\n- The latest Ruby version available from GitHub is Ruby 2.6.3\n- The latest Node version available from GitHub is Node 12.13.1\n\nAt [CodeFund](https://codefund.io), we are using Ruby 2.6.5 (about to bump to 2.7) and Node 13.0.1. There are a few solutions that have been proposed for this problem, like installing the version of Ruby you want from source with [ruby build](https://github.com/clupprich/ruby-build-action) or using a tool like [nvm](https://github.com/dcodeIO/setup-node-nvm). These may work for you but they can be slow, and they wouldn't work for a problem I would later have. Instead, I wrote my own Docker image that had everything I needed already built in. Ruby 2.6.5, Node 13.0.1, additional packages you would need for Postgres, Chrome for system tests, Bundler 2.0.2, and my generic environment variables.\n\nI am not going to explain all of the details here, and I know I could reduce the size a bit but here is the first iteration of that image:\n\n```Dockerfile\nFROM ruby:2.6.5\n\nLABEL \"name\"=\"Locomotive\"\nLABEL \"version\"=\"0.0.1\"\n\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=DontWarn\nENV BUNDLE_PATH='/bundle/vendor'\nENV LANG=en_US.UTF-8\nENV LANGUAGE=en_US.UTF-8\nENV LC_ALL=C.UTF-8\nENV PG_HOST='postgres'\nENV PG_PASSWORD='postgres'\nENV PG_USERNAME='postgres'\nENV RACK_ENV='test'\nENV RAILS_ENV='test'\nENV REDIS_CACHE_URL='redis://redis:6379/0'\nENV REDIS_QUEUE_URL='redis://redis:6379/0'\n\nRUN  curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026 \\\n     echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \u0026\u0026 \\\n     curl -sL https://deb.nodesource.com/setup_13.x | bash - \u0026\u0026 \\\n     wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026 \\\n     echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" | tee /etc/apt/sources.list.d/google-chrome.list \u0026\u0026 \\\n     apt-get update \u0026\u0026 \\\n     apt-get install -y google-chrome-stable \u0026\u0026 \\\n     echo \"CHROME_BIN=/usr/bin/google-chrome\" | tee -a /etc/environment \u0026\u0026 \\\n     wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026 \\\n     echo 'deb http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list \u0026\u0026 \\\n     apt-get -yqq install libpq-dev \u0026\u0026 \\\n     apt-get install -qq -y google-chrome-stable yarn nodejs postgresql postgresql-contrib\n\nRUN gem install bundler:2.0.2\n```\n\n### 6. Use Docker container\n\n```yml\ncontainer:\n      image: andrewmcodes/locomotive:v0.0.1 # my image name\n      env: # additional environment variables I want to have access to\n        DEFAULT_HOST: app.codefund.io\n```\n\nNote: If you do not set a container, all steps will run directly on the host specified, which if you remember is Ubuntu 18.04.\n\nAs of now, our action looks like:\n\n```yml\nname: Run Tests \u0026 Linters\n\non:\n  pull_request:\n    branches:\n      - '*'\n  push:\n    branches:\n      - master\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    services:\n      postgres:\n        image: postgres:11\n        env:\n          POSTGRES_USER: postgres\n          POSTGRES_PASSWORD: postgres\n          POSTGRES_DB: postgres\n        ports: ['5432:5432']\n        options: \u003e-\n          --health-cmd pg_isready\n          --health-interval 10s\n          --health-timeout 5s\n          --health-retries 5\n      redis:\n        image: redis\n        ports: ['6379:6379']\n        options: --entrypoint redis-server\n    container:\n      image: andrewmcodes/locomotive:v0.0.1\n      env:\n        DEFAULT_HOST: app.codefund.io\n```\n\n### 7. Add steps\n\nNow it is time to run commands inside of our container. We will start by checking out the code.\n\n```yml\nsteps:\n  - uses: actions/checkout@v2\n```\n\n### 8. Caching\n\nThankfully, GitHub provides some examples for getting started with your tools of choice for caching dependencies. I recommend checking those out and the documentation.\n\n[GitHub Actions Cache Examples](https://github.com/actions/cache/blob/master/examples.md)\n[Cache Documentation](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/caching-dependencies-to-speed-up-workflows)\n\nNOTE: Individual caches are limited to 400MB and a repository can have up to 2GB of caches. Once the 2GB limit is reached, older caches will be evicted based on when the cache was last accessed. Caches that are not accessed within the last week will also be evicted.\n\n```yml\n - name: Get Yarn Cache\n   id: yarn-cache\n   run: echo \"::set-output name=dir::$(yarn cache dir)\"\n\n - name: Node Modules Cache\n   id: node-modules-cache\n   uses: actions/cache@v1\n   with:\n     path: ${{ steps.yarn-cache.outputs.dir }}\n     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n     restore-keys: |\n       ${{ runner.os }}-yarn-\n\n - name: Gems Cache\n   id: gem-cache\n   uses: actions/cache@v1\n   with:\n     path: vendor/bundle\n     key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}\n     restore-keys: |\n       ${{ runner.os }}-gem-\n\n - name: Assets Cache\n   id: assets-cache\n   uses: actions/cache@v1\n   with:\n     path: public/packs-test\n     key: ${{ runner.os }}-assets-${{ steps.extract_branch.outputs.branch }}\n     restore-keys: |\n       ${{ runner.os }}-assets-\n```\n\n### 9. Bundle, Yarn, and Precompile Assets\n\nNext, we will want to run Bundler and Yarn to install our dependencies if they were not restored from the cache, and precompile our assets.\n\n```yml\n - name: Bundle Install\n   run: bundle check || bundle install --path vendor/bundle --jobs 4 --retry 3\n\n - name: Yarn Install\n   run: yarn check || bin/rails yarn:install\n\n - name: Compile Assets\n   run: |\n      if [[ ! -d public/packs-test ]]; then\n        bin/rails webpacker:compile\n      else\n        echo \"No need to compile assets.\"\n      fi\n```\n\nNOTE: You may be able to skip the asset compilation, that is up to you.\n\n### 10. Update some files\n\nIn order to get this to work, I had to make a couple updates to some files in my project.\n\n1. `config/database.yml`\n  Update host for test to be: `host: \u003c%= ENV.fetch(\"PG_HOST\", \"localhost\") %\u003e`\n2. Update `test/application_system_test_case.rb`\n  ```rb\n     require \"test_helper\"\n\n     class ApplicationSystemTestCase \u003c ActionDispatch::SystemTestCase\n       driven_by :selenium, using: :headless_chrome, screen_size: [1400,1400] do |driver_options|\n        driver_options.add_argument(\"--disable-dev-shm-usage\")\n        driver_options.add_argument(\"--no-sandbox\")\n      end\n    end\n  ```\n\n### 11. Setup Database\n\nOne last item we need to take care of prior to running the tests and linters is setting up our database.\n\n```yml\n- name: Setup DB\n      run: bin/rails db:drop db:create db:structure:load --trace\n```\n\n### 12. Run Tests and Linters\n\nNow we can finally run our tests and linters.\n\n```yml\n- name: Run Rails Tests\n  run: |\n    bin/rails test\n    bin/rails test:system\n\n- name: Zeitwerk Check\n  run: bundle exec rails zeitwerk:check\n\n- name: StandardRB Check\n  run: bundle exec standardrb --format progress\n\n- name: ERB Lint\n  run: bundle exec erblint app/views_redesigned/**/*.html.erb\n\n- name: Prettier-Standard Check\n  run: yarn run --ignore-engines prettier-standard --check 'app/**/*.js'\n```\n\nAt this point, your action should be complete!\n\nHere is my completed action file:\n\n```yml\nname: Run Tests \u0026 Linters\n\non:\n  pull_request:\n    branches:\n      - '*'\n  push:\n    branches:\n      - master\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    services:\n      postgres:\n        image: postgres:11\n        env:\n          POSTGRES_USER: postgres\n          POSTGRES_PASSWORD: postgres\n          POSTGRES_DB: postgres\n        ports: ['5432:5432']\n        options: \u003e-\n          --health-cmd pg_isready\n          --health-interval 10s\n          --health-timeout 5s\n          --health-retries 5\n      redis:\n        image: redis\n        ports: ['6379:6379']\n        options: --entrypoint redis-server\n    container:\n      image: andrewmcodes/locomotive:v0.0.1\n      env:\n        DEFAULT_HOST: app.codefund.io\n    steps:\n    - uses: actions/checkout@v1\n\n    - name: Get Yarn Cache\n      id: yarn-cache\n      run: echo \"::set-output name=dir::$(yarn cache dir)\"\n\n    - name: Cache Node Modules\n      id: node-modules-cache\n      uses: actions/cache@v1\n      with:\n        path: ${{ steps.yarn-cache.outputs.dir }}\n        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n        restore-keys: |\n          ${{ runner.os }}-yarn-\n\n    - name: Cache Gems\n      id: gem-cache\n      uses: actions/cache@v1\n      with:\n        path: vendor/bundle\n        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}\n        restore-keys: |\n          ${{ runner.os }}-gem-\n\n    - name: Cache Assets\n      id: assets-cache\n      uses: actions/cache@v1\n      with:\n        path: public/packs-test\n        key: ${{ runner.os }}-assets-${{ steps.extract_branch.outputs.branch }}\n        restore-keys: |\n          ${{ runner.os }}-assets-\n\n    - name: Bundle Install\n      run: bundle install --path vendor/bundle --jobs 4 --retry 3\n\n    - name: Yarn Install\n      run: bin/rails yarn:install\n\n    - name: Compile Assets\n      shell: bash\n      run: |\n        if [[ ! -d public/packs-test ]]; then\n          bundle exec rails webpacker:compile\n        else\n          echo \"No need to compile assets.\"\n        fi\n\n    - name: Setup DB\n      run: bin/rails db:drop db:create db:structure:load --trace\n\n    - name: Run Rails Tests\n      run: |\n        bin/rails test\n        bin/rails test:system\n\n    - name: Zeitwerk Check\n      run: bundle exec rails zeitwerk:check\n\n    - name: StandardRB Check\n      run: bundle exec standardrb --format progress\n\n    - name: ERB Lint\n      run: bundle exec erblint app/views_redesigned/**/*.html.erb\n\n    - name: Prettier-Standard Check\n      run: yarn run --ignore-engines prettier-standard --check 'app/**/*.js'\n```\n\nAs you can see, setting up GitHub Actions for your CI can be quite involved and requires a lot of initial setup. Hopefully this post will help you if you are thinking of experimenting with them on your Rails app. Check back later this week for Part 2, setting up CircleCI!",
    "positive_reactions_count": 67,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--PuzHQhI4--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/4sxzx12la83xlo6ves0i.jpg",
    "tag_list": ["ruby", "rails", "github", "tutorial"],
    "canonical_url": "https://dev.to/codefund/ci-for-ruby-on-rails-github-actions-3mn1",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    },
    "organization": {
      "name": "CodeFund",
      "username": "codefund",
      "slug": "codefund",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--GCFx7VZr--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/1615/90d98caf-5a7c-4359-a093-3a8e950c7c7a.png",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--W84yQm1f--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/1615/90d98caf-5a7c-4359-a093-3a8e950c7c7a.png"
    }
  },
  {
    "type_of": "article",
    "id": 223519,
    "title": "Run Rubocop with GitHub Actions",
    "description": "GitHub Actions are a great new tool that you have at your disposal if you are using GitHub. There is...",
    "published": true,
    "published_at": "2019-12-19T02:10:52.680Z",
    "slug": "run-rubocop-with-github-actions-4adp",
    "path": "/andrewmcodes/run-rubocop-with-github-actions-4adp",
    "url": "https://dev.to/andrewmcodes/run-rubocop-with-github-actions-4adp",
    "comments_count": 0,
    "public_reactions_count": 12,
    "page_views_count": 1329,
    "published_timestamp": "2019-12-19T02:10:52Z",
    "body_markdown": "GitHub Actions are a great new tool that you have at your disposal if you are using GitHub. There is a lot you can do with them, but in this article we will focus on how to use actions to run [Rubocop](https://github.com/rubocop-hq/rubocop), a Ruby static code analyzer and code formatter, against a vanilla Rails app, with the help of the [Rubocop Linter Action](https://github.com/andrewmcodes/rubocop-linter-action).\n\nThe action uses [GitHub's Checks API](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) to display the results of the action in the UI, to help you better visualize your failing lints.\n\n# What We Will Build\n\nTo demonstrate how to use the [Rubocop Linter Action](https://github.com/andrewmcodes/rubocop-linter-action), we will scaffold a small Rails app and add the action. After we get the action working, we will add some configuration options to showcase some of the action's abilities.\n\n# The Code\n\nFor this demo, I am using Ruby `2.6.5` and Rails `6.0.1`.\n\nFirst, let's create a new Rails app:\n\n```sh\nrails new devto-rubocop-linter-action-demo\ncd devto-rubocop-linter-action-demo/\n```\n\nTo run the action out of the box, all we need to do is add a workflow file:\n\n```sh\nmkdir -p .github/workflows\ntouch .github/workflows/rubocop.yml\n```\n\nYou should now have a file named `rubocop.yml` inside `.github/workflows`. \n\nNow, lets configure our workflow to run the [Rubocop Linter Action](https://github.com/andrewmcodes/rubocop-linter-action):\n\n```yml\n# .github/workflows/rubocop.yml\n\nname: Rubocop\n\non: [push]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v2\n    - name: Rubocop Linter Action\n      uses: andrewmcodes/rubocop-linter-action@v3.0.0.rc2\n      env:\n        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n```\n\nThis tells GitHub that our action name is \"Rubocop\", and we are going to run it on the latest ubuntu version available whenever there is a push to the repository. \n\nFor our steps, we will first check-out the repository using `actions/checkout@v2`, which is an action that checks-out your repository under `$GITHUB_WORKSPACE`, so your workflow can access it. \n\nWe will then run a step with the name of `Rubocop Linter Action` that uses the action with the same name. For this tutorial, we will be using version `3.0.0.rc2` of the action. \n\nThe last step is to pass in a generated GitHub token to the action under the `GITHUB_TOKEN` environment variable, which will be accessible inside of the action. You can read more about that [here](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/authenticating-with-the-github_token).\n\nNow I am going to create a repository called `devto-rubocop-linter-action-demo` on GitHub. You can find it [here](https://github.com/andrewmcodes/devto-rubocop-linter-action-demo). After the repository is created, we need to run a few commands to push our action to our master branch.\n\n```sh\ngit add .\ngit commit -m \"first commit\"\ngit remote add origin https://github.com/andrewmcodes/devto-rubocop-linter-action-demo.git\ngit push -u origin master\n```\n\nNow if we open our repository on GitHub, under the \"Actions\" tab, we should see this:\n\n![GitHub Action Tab](https://thepracticaldev.s3.amazonaws.com/i/1lttphdk0uj0lr89spy3.png)\n\nIf we click on this action, and wait a few seconds, it should succeed. On the left side of the screen you should see our action name, \"Rubocop\", and two items underneath it, \"Build\" and \"Rubocop Action\". \n\nIf you click on \"Build\", it will show you the build logs for the action. \n\nIf you click on \"Rubopcop Action\", we should see our Rubocop results.\n\n![Rubocop Action Results](https://thepracticaldev.s3.amazonaws.com/i/41unrunahp55dn2tk2uh.png)\n\nPretty cool! We can now see all of the failures for the action on our fresh Rails app, using just the [Rubocop Linter Action](https://github.com/andrewmcodes/rubocop-linter-action) and Rubocop defaults. Notice that we didn't even need to add Rubocop to our Gemfile!\n\n# Advanced Configuration\n\nThe real power of the action is that you can configure it to work how you want. It also works even better with pull requests, which is what I will show you now.\n\nFirst, let's create a new branch:\n\n```sh\ngit checkout -b advanced-rubocop-action-config\n```\n\nNext, create a Rubocop config file:\n\n```sh\ntouch .rubocop.yml\n```\n\nInside of that file, let's add:\n\n```yml\n# .rubocop.yml\n\nrequire:\n  - rubocop-performance\n  - rubocop-rails\n```\n\nWhat this does is tell Rubocop that we want to use the [Rubocop Performance](https://github.com/rubocop-hq/rubocop-performance) and [Rubocop Rails](https://github.com/rubocop-hq/rubocop-rails) extensions. Notice that we have not added these gems to our Gemfile.\n\nNow, lets create a config file for our action:\n\n```sh\nmkdir -p .github/config\ntouch .github/config/rubocop_linter_action.yml\n```\n\nThis will be the file that we use to configure the action. Let's add some config options to it:\n\n```yml\n# .github/config/rubocop_linter_action.yml\n\nrubocop_extensions:\n  - 'rubocop-rails'\n  - 'rubocop-performance': '1.5.1'\n```\n\nWhat this does is tell the action we want to use the Rubocop Rails and Rubocop Performance extensions. Specifically, we want to use the latest version of `rubocop-rails`, and version 1.5.1 of `rubocop-performance`.\n\nLet's commit these and see what happens:\n\n```sh\ngit add .\ngit commit -m \"add rubocop and rubocop-linter-action config files\"\ngit push --set-upstream origin advanced-rubocop-action-config\n```\n\nIf we go to our repo on GitHub, we should see a banner with our branch name and a button that says \"Compare \u0026 pull request\". If we click that, we should be taken to a pull request edit page. Click \"Create Pull Request\" button to open our new pull request. \n\nNow that our pull request is open, click the \"Checks\" tab, and we should see that we have a few more offenses now that we have added our plugins:\n\n![Updated Config Rubocop Action Results](https://thepracticaldev.s3.amazonaws.com/i/dpuoc1mbc4bo23h0c3qc.png)\n\nIf we click on one of the checks, you should be taken to the location in the file where lint was recorded:\n\n![Inline Rubocop Action Results](https://thepracticaldev.s3.amazonaws.com/i/ndyp4yyoa3fs4nf7eeb3.png)\n\n# In Summary\n\nThere are lots more changes we can add to finely tune [Rubocop Linter Action](https://github.com/andrewmcodes/rubocop-linter-action) to run the way we want. A few of my favorites are the ability to only run Rubocop against the diff and bundling our Gemfile instead of installing extensions from [RubyGems.org](https://rubygems.org) directly.\n\nIf this has interested you, I would suggest checking out the [action documentation](https://rubocop-linter-action.readthedocs.io/en/v3.0.0.rc2/) and the [GitHub repo](https://github.com/andrewmcodes/rubocop-linter-action).\n\nVersion 3.0.0.rc2 is in a pre-release phase, but I would love if you give it a try and let me know what issues you come across!\n\nHappy Coding! 😃",
    "positive_reactions_count": 12,
    "cover_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--3hGkKUbx--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/wx4vtsd90muyfzf99smc.png",
    "tag_list": ["rails", "ruby", "actions", "archived"],
    "canonical_url": "https://dev.to/andrewmcodes/run-rubocop-with-github-actions-4adp",
    "user": {
      "name": "Andrew Mason",
      "username": "andrewmcodes",
      "twitter_username": "andrewmcodes",
      "github_username": "andrewmcodes",
      "website_url": "https://www.andrewm.codes",
      "profile_image": "https://res.cloudinary.com/practicaldev/image/fetch/s--iKt6EQ8O--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg",
      "profile_image_90": "https://res.cloudinary.com/practicaldev/image/fetch/s--Zwt7I12Z--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131437/77a793d4-c9e6-405e-b3ee-35cd70281a69.jpeg"
    }
  }
]
